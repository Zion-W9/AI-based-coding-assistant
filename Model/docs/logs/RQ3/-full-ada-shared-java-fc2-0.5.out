@ Stage 4
2022-08-28 16:15:35 | INFO | fairseq_cli.train | Namespace(activation_fn='gelu', adam_betas='(0.9, 0.98)', adam_eps=1e-06, adaptive_softmax_cutoff=None, adaptive_softmax_dropout=0, all_gather_list_size=16384, arch='mbart_base', attention_dropout=0.0, batch_size=16, batch_size_valid=16, best_checkpoint_metric='bleu', bf16=False, bpe='sentencepiece', broadcast_buffers=False, bucket_cap_mb=25, checkpoint_shard_count=1, checkpoint_suffix='', clip_norm=0.0, cpu=False, criterion='label_smoothed_cross_entropy', cross_self_attention=False, curriculum=0, data='/home/cluster/jgu/scratch/ssr/cli/out/mix/java/data-bin', data_buffer_size=10, dataset_impl=None, ddp_backend='no_c10d', decoder_attention_heads=12, decoder_embed_dim=768, decoder_embed_path=None, decoder_ffn_embed_dim=3072, decoder_input_dim=768, decoder_layerdrop=0, decoder_layers=6, decoder_layers_to_keep=None, decoder_learned_pos=True, decoder_normalize_before=False, decoder_output_dim=768, device_id=0, disable_validation=False, distributed_backend='nccl', distributed_init_method=None, distributed_no_spawn=False, distributed_num_procs=1, distributed_port=-1, distributed_rank=0, distributed_world_size=1, distributed_wrapper='DDP', dropout=0.1, dstore_filename='/home/cluster/jgu/scratch/ssr/cli/out/mix/java/full_shared_datastore', dstore_fp16=True, dstore_size=2387231, empty_cache_freq=0, encoder_attention_heads=12, encoder_embed_dim=768, encoder_embed_path=None, encoder_ffn_embed_dim=3072, encoder_layerdrop=0, encoder_layers=6, encoder_layers_to_keep=None, encoder_learned_pos=True, encoder_normalize_before=False, end_learning_rate=0.0, eval_bleu=True, eval_bleu_args='{"beam": 6}', eval_bleu_detok='space', eval_bleu_detok_args=None, eval_bleu_print_samples=False, eval_bleu_remove_bpe='sentencepiece', eval_tokenized_bleu=True, fast_stat_sync=False, find_unused_parameters=False, finetune_from_model=None, fix_batches_to_gpus=False, fixed_validation_seed=None, force_anneal=None, fp16=False, fp16_init_scale=128, fp16_no_flatten_grads=False, fp16_scale_tolerance=0.0, fp16_scale_window=None, gen_subset='test', ignore_prefix_size=0, k=2, keep_best_checkpoints=-1, keep_interval_updates=-1, keep_last_epochs=-1, knn_lambda=0.5, knn_sim_metric='IP', knn_temperature=10.0, label_smoothing=0.1, langs='java,python,en_XX', layernorm_embedding=True, left_pad_source='True', left_pad_target='False', load_alignments=False, localsgd_frequency=3, log_format='json', log_interval=100, lr=[5e-05], lr_scheduler='polynomial_decay', max_epoch=1, max_source_positions=1024, max_target_positions=1024, max_tokens=None, max_tokens_valid=None, max_update=0, maximize_best_checkpoint_metric=True, memory_efficient_bf16=False, memory_efficient_fp16=False, min_loss_scale=0.0001, min_lr=-1.0, model_parallel_size=1, move_dstore_to_mem=True, no_cross_attention=False, no_epoch_checkpoints=True, no_last_checkpoints=False, no_progress_bar=False, no_save=False, no_save_optimizer_state=False, no_scale_embedding=False, no_seed_provided=False, no_token_positional_embeddings=False, nprocs_per_node=1, num_batch_buckets=0, num_shards=1, num_workers=1, only_train_final_output=False, optimizer='adam', optimizer_overrides='{}', partially_finetune=True, patience=5, pipeline_balance=None, pipeline_checkpoint='never', pipeline_chunks=0, pipeline_decoder_balance=None, pipeline_decoder_devices=None, pipeline_devices=None, pipeline_encoder_balance=None, pipeline_encoder_devices=None, pipeline_model_parallel=False, pooler_activation_fn='tanh', pooler_dropout=0.0, power=1.0, prepend_bos=False, probe=32, profile=False, quant_noise_pq=0, quant_noise_pq_block_size=8, quant_noise_scalar=0, quantization_config_path=None, relu_dropout=0.0, report_accuracy=False, required_batch_size_multiple=8, required_seq_len_multiple=1, reset_dataloader=True, reset_lr_scheduler=True, reset_meters=True, reset_optimizer=True, restore_file='/home/cluster/jgu/scratch/ssr/cli/out/mix/full_base_java_en_XX/checkpoint_best.pt', save_dir='/home/cluster/jgu/scratch/ssr/cli/out/mix/full_ada_java_en_XX', save_interval=1, save_interval_updates=0, scoring='bleu', seed=42, sentence_avg=False, sentencepiece_model='/home/cluster/jgu/scratch/ssr/cli/sentencepiece/sentencepiece.bpe.model', shard_id=0, share_all_embeddings=True, share_decoder_input_output_embed=True, skip_invalid_size_inputs_valid_test=False, slowmo_algorithm='LocalSGD', slowmo_momentum=None, source_lang='java', stop_time_hours=0, target_lang='en_XX', task='translation_from_pretrained_bart', tensorboard_logdir=None, threshold_loss_scale=None, tokenizer=None, total_num_update=1000000, tpu=False, train_subset='train', truncate_source=False, update_freq=[1], upsample_primary=1, use_bmuf=False, use_gpu_to_search=True, use_knn_datastore=True, use_old_adam=False, user_dir='/home/cluster/jgu/scratch/ssr/cli', valid_subset='valid', validate_after_updates=0, validate_interval=1, validate_interval_updates=0, warmup_updates=1000, weight_decay=0.0, zero_sharding='none')
2022-08-28 16:15:36 | INFO | fairseq.tasks.translation | [java] dictionary: 50001 types
2022-08-28 16:15:36 | INFO | fairseq.tasks.translation | [en_XX] dictionary: 50001 types
2022-08-28 16:15:36 | INFO | fairseq.data.data_utils | loaded 8714 examples from: /home/cluster/jgu/scratch/ssr/cli/out/mix/java/data-bin/valid.java-en_XX.java
2022-08-28 16:15:36 | INFO | fairseq.data.data_utils | loaded 8714 examples from: /home/cluster/jgu/scratch/ssr/cli/out/mix/java/data-bin/valid.java-en_XX.en_XX
2022-08-28 16:15:36 | INFO | fairseq.tasks.translation | /home/cluster/jgu/scratch/ssr/cli/out/mix/java/data-bin valid java-en_XX 8714 examples
put index from cpu to gpu
Reading datastore took 2.2934725284576416 s
the datastore is /home/cluster/jgu/scratch/ssr/cli/out/mix/java/full_shared_datastore, size is 2387231, and dim is 768 
Loading to memory...
Loading to memory took 4.206706523895264 s
2022-08-28 16:15:45 | INFO | fairseq_cli.train | BARTModel(
  (encoder): TransformerEncoder(
    (dropout_module): FairseqDropout()
    (embed_tokens): Embedding(50005, 768, padding_idx=1)
    (embed_positions): LearnedPositionalEmbedding(1026, 768, padding_idx=1)
    (layernorm_embedding): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
    (layers): ModuleList(
      (0): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=768, out_features=3072, bias=True)
        (fc2): Linear(in_features=3072, out_features=768, bias=True)
        (final_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      )
      (1): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=768, out_features=3072, bias=True)
        (fc2): Linear(in_features=3072, out_features=768, bias=True)
        (final_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      )
      (2): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=768, out_features=3072, bias=True)
        (fc2): Linear(in_features=3072, out_features=768, bias=True)
        (final_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      )
      (3): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=768, out_features=3072, bias=True)
        (fc2): Linear(in_features=3072, out_features=768, bias=True)
        (final_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      )
      (4): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=768, out_features=3072, bias=True)
        (fc2): Linear(in_features=3072, out_features=768, bias=True)
        (final_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      )
      (5): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=768, out_features=3072, bias=True)
        (fc2): Linear(in_features=3072, out_features=768, bias=True)
        (final_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      )
    )
  )
  (decoder): TransformerDecoder(
    (dropout_module): FairseqDropout()
    (embed_tokens): Embedding(50005, 768, padding_idx=1)
    (embed_positions): LearnedPositionalEmbedding(1026, 768, padding_idx=1)
    (layernorm_embedding): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
    (layers): ModuleList(
      (0): TransformerDecoderLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (encoder_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (encoder_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=768, out_features=3072, bias=True)
        (fc2): Linear(in_features=3072, out_features=768, bias=True)
        (final_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      )
      (1): TransformerDecoderLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (encoder_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (encoder_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=768, out_features=3072, bias=True)
        (fc2): Linear(in_features=3072, out_features=768, bias=True)
        (final_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      )
      (2): TransformerDecoderLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (encoder_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (encoder_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=768, out_features=3072, bias=True)
        (fc2): Linear(in_features=3072, out_features=768, bias=True)
        (final_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      )
      (3): TransformerDecoderLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (encoder_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (encoder_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=768, out_features=3072, bias=True)
        (fc2): Linear(in_features=3072, out_features=768, bias=True)
        (final_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      )
      (4): TransformerDecoderLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (encoder_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (encoder_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=768, out_features=3072, bias=True)
        (fc2): Linear(in_features=3072, out_features=768, bias=True)
        (final_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      )
      (5): TransformerDecoderLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (encoder_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (encoder_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=768, out_features=3072, bias=True)
        (fc2): Linear(in_features=3072, out_features=768, bias=True)
        (final_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      )
    )
    (adaptive_block): AdaptiveBlock(
      (fc_unit): Linear(in_features=768, out_features=768, bias=False)
      (fc_unit2): Linear(in_features=768, out_features=768, bias=False)
      (fc_zero): Linear(in_features=768, out_features=768, bias=False)
      (fc_zero2): Linear(in_features=768, out_features=768, bias=False)
    )
    (output_projection): Linear(in_features=768, out_features=50005, bias=False)
  )
  (classification_heads): ModuleDict()
)
2022-08-28 16:15:45 | INFO | fairseq_cli.train | task: translation_from_pretrained_bart (TranslationFromPretrainedBARTTask)
2022-08-28 16:15:45 | INFO | fairseq_cli.train | model: mbart_base (BARTModel)
2022-08-28 16:15:45 | INFO | fairseq_cli.train | criterion: label_smoothed_cross_entropy (LabelSmoothedCrossEntropyCriterion)
2022-08-28 16:15:45 | INFO | fairseq_cli.train | num. model params: 141580032 (num. trained: 2359296)
2022-08-28 16:15:45 | INFO | fairseq.trainer | detected shared parameter: encoder.embed_tokens.weight <- decoder.embed_tokens.weight
2022-08-28 16:15:45 | INFO | fairseq.trainer | detected shared parameter: encoder.embed_tokens.weight <- decoder.output_projection.weight
2022-08-28 16:15:45 | INFO | fairseq.trainer | detected shared parameter: decoder.adaptive_block.fc_unit.bias <- decoder.adaptive_block.fc_unit2.bias
2022-08-28 16:15:45 | INFO | fairseq.trainer | detected shared parameter: decoder.adaptive_block.fc_unit.bias <- decoder.adaptive_block.fc_zero.bias
2022-08-28 16:15:45 | INFO | fairseq.trainer | detected shared parameter: decoder.adaptive_block.fc_unit.bias <- decoder.adaptive_block.fc_zero2.bias
2022-08-28 16:15:45 | INFO | fairseq.trainer | detected shared parameter: decoder.adaptive_block.fc_unit.bias <- decoder.output_projection.bias
2022-08-28 16:15:45 | INFO | fairseq.utils | ***********************CUDA enviroments for all 1 workers***********************
2022-08-28 16:15:45 | INFO | fairseq.utils | rank   0: capabilities =  7.0  ; total memory = 31.749 GB ; name = Tesla V100-SXM2-32GB                    
2022-08-28 16:15:45 | INFO | fairseq.utils | ***********************CUDA enviroments for all 1 workers***********************
2022-08-28 16:15:45 | INFO | fairseq_cli.train | training on 1 devices (GPUs/TPUs)
2022-08-28 16:15:45 | INFO | fairseq_cli.train | max tokens per GPU = None and max sentences per GPU = 16
-----------------knn load part of model-----------------
2022-08-28 16:15:56 | INFO | fairseq.trainer | loaded checkpoint /home/cluster/jgu/scratch/ssr/cli/out/mix/full_base_java_en_XX/checkpoint_best.pt (epoch 37 @ 0 updates)
2022-08-28 16:15:56 | INFO | fairseq.trainer | NOTE: your device may support faster training with --fp16
2022-08-28 16:15:56 | INFO | fairseq.trainer | loading train data for epoch 1
2022-08-28 16:15:56 | INFO | fairseq.data.data_utils | loaded 69708 examples from: /home/cluster/jgu/scratch/ssr/cli/out/mix/java/data-bin/train.java-en_XX.java
2022-08-28 16:15:56 | INFO | fairseq.data.data_utils | loaded 69708 examples from: /home/cluster/jgu/scratch/ssr/cli/out/mix/java/data-bin/train.java-en_XX.en_XX
2022-08-28 16:15:56 | INFO | fairseq.tasks.translation | /home/cluster/jgu/scratch/ssr/cli/out/mix/java/data-bin train java-en_XX 69708 examples
2022-08-28 16:15:56 | INFO | fairseq.trainer | begin training epoch 1
2022-08-28 16:16:12 | INFO | train_inner | {"epoch": 1, "update": 0.023, "loss": "3.064", "nll_loss": "1.099", "ppl": "2.14", "wps": "2146.8", "ups": "6.74", "wpb": "317.4", "bsz": "16", "num_updates": "100", "lr": "5e-06", "gnorm": "0.535", "train_wall": "15", "wall": "26"}
2022-08-28 16:16:28 | INFO | train_inner | {"epoch": 1, "update": 0.046, "loss": "3.064", "nll_loss": "1.118", "ppl": "2.17", "wps": "2218.9", "ups": "6.23", "wpb": "356.2", "bsz": "16", "num_updates": "200", "lr": "1e-05", "gnorm": "0.529", "train_wall": "16", "wall": "42"}
2022-08-28 16:16:42 | INFO | train_inner | {"epoch": 1, "update": 0.069, "loss": "3.006", "nll_loss": "1.061", "ppl": "2.09", "wps": "2338.4", "ups": "7.22", "wpb": "323.9", "bsz": "16", "num_updates": "300", "lr": "1.5e-05", "gnorm": "0.51", "train_wall": "14", "wall": "56"}
2022-08-28 16:16:57 | INFO | train_inner | {"epoch": 1, "update": 0.092, "loss": "3.001", "nll_loss": "1.059", "ppl": "2.08", "wps": "2101.5", "ups": "6.46", "wpb": "325.4", "bsz": "16", "num_updates": "400", "lr": "2e-05", "gnorm": "0.494", "train_wall": "15", "wall": "72"}
2022-08-28 16:17:13 | INFO | train_inner | {"epoch": 1, "update": 0.115, "loss": "3.104", "nll_loss": "1.177", "ppl": "2.26", "wps": "2234.3", "ups": "6.12", "wpb": "365.2", "bsz": "16", "num_updates": "500", "lr": "2.5e-05", "gnorm": "0.505", "train_wall": "16", "wall": "88"}
2022-08-28 16:17:27 | INFO | train_inner | {"epoch": 1, "update": 0.138, "loss": "3.015", "nll_loss": "1.076", "ppl": "2.11", "wps": "2299.5", "ups": "7.28", "wpb": "316", "bsz": "16", "num_updates": "600", "lr": "3e-05", "gnorm": "0.5", "train_wall": "14", "wall": "102"}
2022-08-28 16:17:42 | INFO | train_inner | {"epoch": 1, "update": 0.161, "loss": "2.986", "nll_loss": "1.044", "ppl": "2.06", "wps": "2127", "ups": "6.76", "wpb": "314.6", "bsz": "16", "num_updates": "700", "lr": "3.5e-05", "gnorm": "0.501", "train_wall": "15", "wall": "116"}
2022-08-28 16:17:56 | INFO | train_inner | {"epoch": 1, "update": 0.184, "loss": "2.989", "nll_loss": "1.053", "ppl": "2.08", "wps": "2266.3", "ups": "7.31", "wpb": "310.1", "bsz": "16", "num_updates": "800", "lr": "4e-05", "gnorm": "0.485", "train_wall": "14", "wall": "130"}
2022-08-28 16:18:09 | INFO | train_inner | {"epoch": 1, "update": 0.207, "loss": "3.033", "nll_loss": "1.103", "ppl": "2.15", "wps": "2517.1", "ups": "7.69", "wpb": "327.3", "bsz": "16", "num_updates": "900", "lr": "4.5e-05", "gnorm": "0.496", "train_wall": "13", "wall": "143"}
2022-08-28 16:18:23 | INFO | train_inner | {"epoch": 1, "update": 0.23, "loss": "3.026", "nll_loss": "1.094", "ppl": "2.14", "wps": "2189", "ups": "6.86", "wpb": "319.2", "bsz": "16", "num_updates": "1000", "lr": "5e-05", "gnorm": "0.482", "train_wall": "14", "wall": "158"}
2022-08-28 16:18:38 | INFO | train_inner | {"epoch": 1, "update": 0.252, "loss": "2.975", "nll_loss": "1.035", "ppl": "2.05", "wps": "2094.2", "ups": "6.9", "wpb": "303.5", "bsz": "16", "num_updates": "1100", "lr": "4.9995e-05", "gnorm": "0.477", "train_wall": "14", "wall": "172"}
2022-08-28 16:18:54 | INFO | train_inner | {"epoch": 1, "update": 0.275, "loss": "3.009", "nll_loss": "1.084", "ppl": "2.12", "wps": "2025.7", "ups": "6.3", "wpb": "321.4", "bsz": "16", "num_updates": "1200", "lr": "4.999e-05", "gnorm": "0.488", "train_wall": "16", "wall": "188"}
2022-08-28 16:19:09 | INFO | train_inner | {"epoch": 1, "update": 0.298, "loss": "2.988", "nll_loss": "1.052", "ppl": "2.07", "wps": "2116.4", "ups": "6.6", "wpb": "320.5", "bsz": "16", "num_updates": "1300", "lr": "4.9985e-05", "gnorm": "0.472", "train_wall": "15", "wall": "203"}
2022-08-28 16:19:22 | INFO | train_inner | {"epoch": 1, "update": 0.321, "loss": "2.961", "nll_loss": "1.024", "ppl": "2.03", "wps": "2289", "ups": "7.45", "wpb": "307.1", "bsz": "16", "num_updates": "1400", "lr": "4.998e-05", "gnorm": "0.459", "train_wall": "13", "wall": "217"}
2022-08-28 16:19:37 | INFO | train_inner | {"epoch": 1, "update": 0.344, "loss": "2.995", "nll_loss": "1.063", "ppl": "2.09", "wps": "2244.4", "ups": "6.59", "wpb": "340.7", "bsz": "16", "num_updates": "1500", "lr": "4.9975e-05", "gnorm": "0.46", "train_wall": "15", "wall": "232"}
2022-08-28 16:19:52 | INFO | train_inner | {"epoch": 1, "update": 0.367, "loss": "2.993", "nll_loss": "1.057", "ppl": "2.08", "wps": "2281.9", "ups": "6.77", "wpb": "337.1", "bsz": "16", "num_updates": "1600", "lr": "4.997e-05", "gnorm": "0.45", "train_wall": "15", "wall": "247"}
2022-08-28 16:20:05 | INFO | train_inner | {"epoch": 1, "update": 0.39, "loss": "2.999", "nll_loss": "1.068", "ppl": "2.1", "wps": "2404.2", "ups": "7.69", "wpb": "312.5", "bsz": "16", "num_updates": "1700", "lr": "4.9965e-05", "gnorm": "0.446", "train_wall": "13", "wall": "260"}
2022-08-28 16:20:19 | INFO | train_inner | {"epoch": 1, "update": 0.413, "loss": "3.017", "nll_loss": "1.088", "ppl": "2.13", "wps": "2445.4", "ups": "7.33", "wpb": "333.6", "bsz": "16", "num_updates": "1800", "lr": "4.996e-05", "gnorm": "0.454", "train_wall": "14", "wall": "273"}
2022-08-28 16:20:32 | INFO | train_inner | {"epoch": 1, "update": 0.436, "loss": "3.013", "nll_loss": "1.087", "ppl": "2.12", "wps": "2327.3", "ups": "7.26", "wpb": "320.6", "bsz": "16", "num_updates": "1900", "lr": "4.9955e-05", "gnorm": "0.448", "train_wall": "14", "wall": "287"}
2022-08-28 16:20:46 | INFO | train_inner | {"epoch": 1, "update": 0.459, "loss": "2.99", "nll_loss": "1.059", "ppl": "2.08", "wps": "2348.8", "ups": "7.41", "wpb": "317", "bsz": "16", "num_updates": "2000", "lr": "4.99499e-05", "gnorm": "0.455", "train_wall": "13", "wall": "301"}
2022-08-28 16:21:01 | INFO | train_inner | {"epoch": 1, "update": 0.482, "loss": "3.009", "nll_loss": "1.079", "ppl": "2.11", "wps": "2328.9", "ups": "6.75", "wpb": "344.8", "bsz": "16", "num_updates": "2100", "lr": "4.99449e-05", "gnorm": "0.456", "train_wall": "15", "wall": "315"}
2022-08-28 16:21:15 | INFO | train_inner | {"epoch": 1, "update": 0.505, "loss": "3.028", "nll_loss": "1.096", "ppl": "2.14", "wps": "2418.7", "ups": "7.07", "wpb": "342.1", "bsz": "16", "num_updates": "2200", "lr": "4.99399e-05", "gnorm": "0.46", "train_wall": "14", "wall": "329"}
2022-08-28 16:21:27 | INFO | train_inner | {"epoch": 1, "update": 0.528, "loss": "2.976", "nll_loss": "1.043", "ppl": "2.06", "wps": "2815", "ups": "8.6", "wpb": "327.2", "bsz": "16", "num_updates": "2300", "lr": "4.99349e-05", "gnorm": "0.451", "train_wall": "12", "wall": "341"}
2022-08-28 16:21:36 | INFO | train_inner | {"epoch": 1, "update": 0.551, "loss": "2.955", "nll_loss": "1.023", "ppl": "2.03", "wps": "3217.8", "ups": "10.77", "wpb": "298.7", "bsz": "16", "num_updates": "2400", "lr": "4.99299e-05", "gnorm": "0.44", "train_wall": "9", "wall": "350"}
2022-08-28 16:21:49 | INFO | train_inner | {"epoch": 1, "update": 0.574, "loss": "3.005", "nll_loss": "1.077", "ppl": "2.11", "wps": "2554.6", "ups": "7.57", "wpb": "337.4", "bsz": "16", "num_updates": "2500", "lr": "4.99249e-05", "gnorm": "0.451", "train_wall": "13", "wall": "364"}
2022-08-28 16:22:01 | INFO | train_inner | {"epoch": 1, "update": 0.597, "loss": "2.972", "nll_loss": "1.04", "ppl": "2.06", "wps": "2676.7", "ups": "8.3", "wpb": "322.6", "bsz": "16", "num_updates": "2600", "lr": "4.99199e-05", "gnorm": "0.463", "train_wall": "12", "wall": "376"}
2022-08-28 16:22:12 | INFO | train_inner | {"epoch": 1, "update": 0.62, "loss": "2.949", "nll_loss": "1.014", "ppl": "2.02", "wps": "2858", "ups": "8.84", "wpb": "323.4", "bsz": "16", "num_updates": "2700", "lr": "4.99149e-05", "gnorm": "0.436", "train_wall": "11", "wall": "387"}
2022-08-28 16:22:24 | INFO | train_inner | {"epoch": 1, "update": 0.643, "loss": "2.989", "nll_loss": "1.057", "ppl": "2.08", "wps": "2728.4", "ups": "8.28", "wpb": "329.4", "bsz": "16", "num_updates": "2800", "lr": "4.99099e-05", "gnorm": "0.431", "train_wall": "12", "wall": "399"}
2022-08-28 16:22:36 | INFO | train_inner | {"epoch": 1, "update": 0.666, "loss": "2.97", "nll_loss": "1.041", "ppl": "2.06", "wps": "2987.3", "ups": "8.54", "wpb": "349.9", "bsz": "16", "num_updates": "2900", "lr": "4.99049e-05", "gnorm": "0.445", "train_wall": "12", "wall": "411"}
2022-08-28 16:22:48 | INFO | train_inner | {"epoch": 1, "update": 0.689, "loss": "3.01", "nll_loss": "1.081", "ppl": "2.12", "wps": "2702.4", "ups": "8.46", "wpb": "319.5", "bsz": "16", "num_updates": "3000", "lr": "4.98999e-05", "gnorm": "0.456", "train_wall": "12", "wall": "423"}
2022-08-28 16:23:01 | INFO | train_inner | {"epoch": 1, "update": 0.711, "loss": "2.981", "nll_loss": "1.049", "ppl": "2.07", "wps": "2579.7", "ups": "7.49", "wpb": "344.3", "bsz": "16", "num_updates": "3100", "lr": "4.98949e-05", "gnorm": "0.416", "train_wall": "13", "wall": "436"}
2022-08-28 16:23:13 | INFO | train_inner | {"epoch": 1, "update": 0.734, "loss": "2.978", "nll_loss": "1.05", "ppl": "2.07", "wps": "2495.3", "ups": "8.23", "wpb": "303.3", "bsz": "16", "num_updates": "3200", "lr": "4.98899e-05", "gnorm": "0.449", "train_wall": "12", "wall": "448"}
2022-08-28 16:23:27 | INFO | train_inner | {"epoch": 1, "update": 0.757, "loss": "3.025", "nll_loss": "1.099", "ppl": "2.14", "wps": "2629.1", "ups": "7.63", "wpb": "344.7", "bsz": "16", "num_updates": "3300", "lr": "4.98849e-05", "gnorm": "0.443", "train_wall": "13", "wall": "461"}
2022-08-28 16:23:38 | INFO | train_inner | {"epoch": 1, "update": 0.78, "loss": "2.951", "nll_loss": "1.018", "ppl": "2.02", "wps": "2486.4", "ups": "8.42", "wpb": "295.4", "bsz": "16", "num_updates": "3400", "lr": "4.98799e-05", "gnorm": "0.431", "train_wall": "12", "wall": "473"}
2022-08-28 16:23:52 | INFO | train_inner | {"epoch": 1, "update": 0.803, "loss": "2.986", "nll_loss": "1.054", "ppl": "2.08", "wps": "2399.5", "ups": "7.31", "wpb": "328.4", "bsz": "16", "num_updates": "3500", "lr": "4.98749e-05", "gnorm": "0.437", "train_wall": "14", "wall": "487"}
2022-08-28 16:24:03 | INFO | train_inner | {"epoch": 1, "update": 0.826, "loss": "2.966", "nll_loss": "1.036", "ppl": "2.05", "wps": "2783.7", "ups": "8.98", "wpb": "309.9", "bsz": "16", "num_updates": "3600", "lr": "4.98699e-05", "gnorm": "0.442", "train_wall": "11", "wall": "498"}
2022-08-28 16:24:15 | INFO | train_inner | {"epoch": 1, "update": 0.849, "loss": "2.961", "nll_loss": "1.029", "ppl": "2.04", "wps": "2838.2", "ups": "8.61", "wpb": "329.7", "bsz": "16", "num_updates": "3700", "lr": "4.98649e-05", "gnorm": "0.426", "train_wall": "12", "wall": "510"}
2022-08-28 16:24:25 | INFO | train_inner | {"epoch": 1, "update": 0.872, "loss": "2.997", "nll_loss": "1.069", "ppl": "2.1", "wps": "2874.6", "ups": "9.53", "wpb": "301.7", "bsz": "16", "num_updates": "3800", "lr": "4.98599e-05", "gnorm": "0.451", "train_wall": "10", "wall": "520"}
2022-08-28 16:24:38 | INFO | train_inner | {"epoch": 1, "update": 0.895, "loss": "3.02", "nll_loss": "1.096", "ppl": "2.14", "wps": "2681.8", "ups": "7.88", "wpb": "340.4", "bsz": "16", "num_updates": "3900", "lr": "4.98549e-05", "gnorm": "0.416", "train_wall": "13", "wall": "533"}
2022-08-28 16:24:51 | INFO | train_inner | {"epoch": 1, "update": 0.918, "loss": "2.964", "nll_loss": "1.032", "ppl": "2.04", "wps": "2511.2", "ups": "7.69", "wpb": "326.7", "bsz": "16", "num_updates": "4000", "lr": "4.98498e-05", "gnorm": "0.443", "train_wall": "13", "wall": "546"}
2022-08-28 16:25:04 | INFO | train_inner | {"epoch": 1, "update": 0.941, "loss": "3.02", "nll_loss": "1.091", "ppl": "2.13", "wps": "2607.7", "ups": "7.49", "wpb": "348.1", "bsz": "16", "num_updates": "4100", "lr": "4.98448e-05", "gnorm": "0.433", "train_wall": "13", "wall": "559"}
2022-08-28 16:25:17 | INFO | train_inner | {"epoch": 1, "update": 0.964, "loss": "2.981", "nll_loss": "1.047", "ppl": "2.07", "wps": "2503.4", "ups": "7.83", "wpb": "319.8", "bsz": "16", "num_updates": "4200", "lr": "4.98398e-05", "gnorm": "0.433", "train_wall": "13", "wall": "572"}
2022-08-28 16:25:31 | INFO | train_inner | {"epoch": 1, "update": 0.987, "loss": "3.075", "nll_loss": "1.155", "ppl": "2.23", "wps": "2557", "ups": "7.22", "wpb": "354.4", "bsz": "16", "num_updates": "4300", "lr": "4.98348e-05", "gnorm": "0.452", "train_wall": "14", "wall": "586"}
2022-08-28 16:25:38 | INFO | fairseq_cli.train | begin validation on "valid" subset
/net/cephfs/scratch/jgu/ssr/fairseq/utils.py:342: UserWarning: amp_C fused kernels unavailable, disabling multi_tensor_l2norm; you may get better performance by installing NVIDIA's apex library
  "amp_C fused kernels unavailable, disabling multi_tensor_l2norm; "
2022-08-28 16:32:08 | INFO | valid | {"epoch": 1, "valid_loss": "5.998", "valid_nll_loss": "4.42", "valid_ppl": "21.41", "valid_bleu": "11.74", "valid_wps": "457.7", "valid_wpb": "327", "valid_bsz": "16", "valid_num_updates": "4357"}
2022-08-28 16:32:08 | INFO | fairseq_cli.train | begin save checkpoint
2022-08-28 16:32:10 | INFO | fairseq.checkpoint_utils | saved checkpoint /home/cluster/jgu/scratch/ssr/cli/out/mix/full_ada_java_en_XX/checkpoint_best.pt (epoch 1 @ 4357 updates, score 11.74) (writing took 2.247648522257805 seconds)
2022-08-28 16:32:10 | INFO | fairseq_cli.train | end of epoch 1 (average epoch stats below)
2022-08-28 16:32:10 | INFO | train | {"epoch": 1, "train_loss": "3", "train_nll_loss": "1.068", "train_ppl": "2.1", "train_wps": "1461.4", "train_ups": "4.47", "train_wpb": "326.6", "train_bsz": "16", "train_num_updates": "4357", "train_lr": "4.9832e-05", "train_gnorm": "0.46", "train_train_wall": "577", "train_wall": "985"}
2022-08-28 16:32:10 | INFO | fairseq_cli.train | done training in 974.3 seconds
/net/cephfs/scratch/jgu/ssr/fairseq/search.py:140: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  beams_buf = indices_buf // vocab_size
/net/cephfs/scratch/jgu/ssr/fairseq/sequence_generator.py:651: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  unfin_idx = idx // beam_size
@ Completed
@ Stage 5
/net/cephfs/scratch/jgu/ssr/fairseq/search.py:140: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  beams_buf = indices_buf // vocab_size
/net/cephfs/scratch/jgu/ssr/fairseq/sequence_generator.py:651: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  unfin_idx = idx // beam_size
WARNING (theano.tensor.blas): We did not find a dynamic library in the library_dir of the library we use for blas. If you use ATLAS, make sure to compile it with dynamics library.
c_bleu = 35.86 | s_bleu = 44.89 | meteor = 26.96 | rouge = 55.99
rouge_coco = 56.99
/net/cephfs/scratch/jgu/ssr/fairseq/search.py:140: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  beams_buf = indices_buf // vocab_size
/net/cephfs/scratch/jgu/ssr/fairseq/sequence_generator.py:651: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  unfin_idx = idx // beam_size
WARNING (theano.tensor.blas): We did not find a dynamic library in the library_dir of the library we use for blas. If you use ATLAS, make sure to compile it with dynamics library.
c_bleu = 36.0 | s_bleu = 45.26 | meteor = 27.2 | rouge = 56.23
rouge_coco = 57.17
@ Completed
