@ Stage 4
2022-08-28 16:15:43 | INFO | fairseq_cli.train | Namespace(activation_fn='gelu', adam_betas='(0.9, 0.98)', adam_eps=1e-06, adaptive_softmax_cutoff=None, adaptive_softmax_dropout=0, all_gather_list_size=16384, arch='mbart_base', attention_dropout=0.0, batch_size=16, batch_size_valid=16, best_checkpoint_metric='bleu', bf16=False, bpe='sentencepiece', broadcast_buffers=False, bucket_cap_mb=25, checkpoint_shard_count=1, checkpoint_suffix='', clip_norm=0.0, cpu=False, criterion='label_smoothed_cross_entropy', cross_self_attention=False, curriculum=0, data='/home/cluster/jgu/scratch/ssr/cli/out/mix/python/data-bin', data_buffer_size=10, dataset_impl=None, ddp_backend='no_c10d', decoder_attention_heads=12, decoder_embed_dim=768, decoder_embed_path=None, decoder_ffn_embed_dim=3072, decoder_input_dim=768, decoder_layerdrop=0, decoder_layers=6, decoder_layers_to_keep=None, decoder_learned_pos=True, decoder_normalize_before=False, decoder_output_dim=768, device_id=0, disable_validation=False, distributed_backend='nccl', distributed_init_method=None, distributed_no_spawn=False, distributed_num_procs=1, distributed_port=-1, distributed_rank=0, distributed_world_size=1, distributed_wrapper='DDP', dropout=0.1, dstore_filename='/home/cluster/jgu/scratch/ssr/cli/out/mix/python/full_shared_datastore', dstore_fp16=True, dstore_size=3180390, empty_cache_freq=0, encoder_attention_heads=12, encoder_embed_dim=768, encoder_embed_path=None, encoder_ffn_embed_dim=3072, encoder_layerdrop=0, encoder_layers=6, encoder_layers_to_keep=None, encoder_learned_pos=True, encoder_normalize_before=False, end_learning_rate=0.0, eval_bleu=True, eval_bleu_args='{"beam": 6}', eval_bleu_detok='space', eval_bleu_detok_args=None, eval_bleu_print_samples=False, eval_bleu_remove_bpe='sentencepiece', eval_tokenized_bleu=True, fast_stat_sync=False, find_unused_parameters=False, finetune_from_model=None, fix_batches_to_gpus=False, fixed_validation_seed=None, force_anneal=None, fp16=False, fp16_init_scale=128, fp16_no_flatten_grads=False, fp16_scale_tolerance=0.0, fp16_scale_window=None, gen_subset='test', ignore_prefix_size=0, k=2, keep_best_checkpoints=-1, keep_interval_updates=-1, keep_last_epochs=-1, knn_lambda=0.5, knn_sim_metric='IP', knn_temperature=10.0, label_smoothing=0.1, langs='java,python,en_XX', layernorm_embedding=True, left_pad_source='True', left_pad_target='False', load_alignments=False, localsgd_frequency=3, log_format='json', log_interval=100, lr=[5e-05], lr_scheduler='polynomial_decay', max_epoch=1, max_source_positions=1024, max_target_positions=1024, max_tokens=None, max_tokens_valid=None, max_update=0, maximize_best_checkpoint_metric=True, memory_efficient_bf16=False, memory_efficient_fp16=False, min_loss_scale=0.0001, min_lr=-1.0, model_parallel_size=1, move_dstore_to_mem=True, no_cross_attention=False, no_epoch_checkpoints=True, no_last_checkpoints=False, no_progress_bar=False, no_save=False, no_save_optimizer_state=False, no_scale_embedding=False, no_seed_provided=False, no_token_positional_embeddings=False, nprocs_per_node=1, num_batch_buckets=0, num_shards=1, num_workers=1, only_train_final_output=False, optimizer='adam', optimizer_overrides='{}', partially_finetune=True, patience=5, pipeline_balance=None, pipeline_checkpoint='never', pipeline_chunks=0, pipeline_decoder_balance=None, pipeline_decoder_devices=None, pipeline_devices=None, pipeline_encoder_balance=None, pipeline_encoder_devices=None, pipeline_model_parallel=False, pooler_activation_fn='tanh', pooler_dropout=0.0, power=1.0, prepend_bos=False, probe=32, profile=False, quant_noise_pq=0, quant_noise_pq_block_size=8, quant_noise_scalar=0, quantization_config_path=None, relu_dropout=0.0, report_accuracy=False, required_batch_size_multiple=8, required_seq_len_multiple=1, reset_dataloader=True, reset_lr_scheduler=True, reset_meters=True, reset_optimizer=True, restore_file='/home/cluster/jgu/scratch/ssr/cli/out/mix/full_base_python_en_XX/checkpoint_best.pt', save_dir='/home/cluster/jgu/scratch/ssr/cli/out/mix/full_ada_python_en_XX', save_interval=1, save_interval_updates=0, scoring='bleu', seed=42, sentence_avg=False, sentencepiece_model='/home/cluster/jgu/scratch/ssr/cli/sentencepiece/sentencepiece.bpe.model', shard_id=0, share_all_embeddings=True, share_decoder_input_output_embed=True, skip_invalid_size_inputs_valid_test=False, slowmo_algorithm='LocalSGD', slowmo_momentum=None, source_lang='python', stop_time_hours=0, target_lang='en_XX', task='translation_from_pretrained_bart', tensorboard_logdir=None, threshold_loss_scale=None, tokenizer=None, total_num_update=1000000, tpu=False, train_subset='train', truncate_source=False, update_freq=[1], upsample_primary=1, use_bmuf=False, use_gpu_to_search=True, use_knn_datastore=True, use_old_adam=False, user_dir='/home/cluster/jgu/scratch/ssr/cli', valid_subset='valid', validate_after_updates=0, validate_interval=1, validate_interval_updates=0, warmup_updates=1000, weight_decay=0.0, zero_sharding='none')
2022-08-28 16:15:43 | INFO | fairseq.tasks.translation | [python] dictionary: 50001 types
2022-08-28 16:15:43 | INFO | fairseq.tasks.translation | [en_XX] dictionary: 50001 types
2022-08-28 16:15:43 | INFO | fairseq.data.data_utils | loaded 18505 examples from: /home/cluster/jgu/scratch/ssr/cli/out/mix/python/data-bin/valid.python-en_XX.python
2022-08-28 16:15:43 | INFO | fairseq.data.data_utils | loaded 18505 examples from: /home/cluster/jgu/scratch/ssr/cli/out/mix/python/data-bin/valid.python-en_XX.en_XX
2022-08-28 16:15:43 | INFO | fairseq.tasks.translation | /home/cluster/jgu/scratch/ssr/cli/out/mix/python/data-bin valid python-en_XX 18505 examples
put index from cpu to gpu
Reading datastore took 2.39501690864563 s
the datastore is /home/cluster/jgu/scratch/ssr/cli/out/mix/python/full_shared_datastore, size is 3180390, and dim is 768 
Loading to memory...
Loading to memory took 3.0448861122131348 s
2022-08-28 16:15:52 | INFO | fairseq_cli.train | BARTModel(
  (encoder): TransformerEncoder(
    (dropout_module): FairseqDropout()
    (embed_tokens): Embedding(50005, 768, padding_idx=1)
    (embed_positions): LearnedPositionalEmbedding(1026, 768, padding_idx=1)
    (layernorm_embedding): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
    (layers): ModuleList(
      (0): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=768, out_features=3072, bias=True)
        (fc2): Linear(in_features=3072, out_features=768, bias=True)
        (final_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      )
      (1): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=768, out_features=3072, bias=True)
        (fc2): Linear(in_features=3072, out_features=768, bias=True)
        (final_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      )
      (2): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=768, out_features=3072, bias=True)
        (fc2): Linear(in_features=3072, out_features=768, bias=True)
        (final_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      )
      (3): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=768, out_features=3072, bias=True)
        (fc2): Linear(in_features=3072, out_features=768, bias=True)
        (final_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      )
      (4): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=768, out_features=3072, bias=True)
        (fc2): Linear(in_features=3072, out_features=768, bias=True)
        (final_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      )
      (5): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=768, out_features=3072, bias=True)
        (fc2): Linear(in_features=3072, out_features=768, bias=True)
        (final_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      )
    )
  )
  (decoder): TransformerDecoder(
    (dropout_module): FairseqDropout()
    (embed_tokens): Embedding(50005, 768, padding_idx=1)
    (embed_positions): LearnedPositionalEmbedding(1026, 768, padding_idx=1)
    (layernorm_embedding): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
    (layers): ModuleList(
      (0): TransformerDecoderLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (encoder_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (encoder_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=768, out_features=3072, bias=True)
        (fc2): Linear(in_features=3072, out_features=768, bias=True)
        (final_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      )
      (1): TransformerDecoderLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (encoder_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (encoder_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=768, out_features=3072, bias=True)
        (fc2): Linear(in_features=3072, out_features=768, bias=True)
        (final_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      )
      (2): TransformerDecoderLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (encoder_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (encoder_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=768, out_features=3072, bias=True)
        (fc2): Linear(in_features=3072, out_features=768, bias=True)
        (final_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      )
      (3): TransformerDecoderLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (encoder_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (encoder_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=768, out_features=3072, bias=True)
        (fc2): Linear(in_features=3072, out_features=768, bias=True)
        (final_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      )
      (4): TransformerDecoderLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (encoder_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (encoder_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=768, out_features=3072, bias=True)
        (fc2): Linear(in_features=3072, out_features=768, bias=True)
        (final_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      )
      (5): TransformerDecoderLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (encoder_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (encoder_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=768, out_features=3072, bias=True)
        (fc2): Linear(in_features=3072, out_features=768, bias=True)
        (final_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      )
    )
    (adaptive_block): AdaptiveBlock(
      (fc_unit): Linear(in_features=768, out_features=768, bias=False)
      (fc_unit2): Linear(in_features=768, out_features=768, bias=False)
      (fc_zero): Linear(in_features=768, out_features=768, bias=False)
      (fc_zero2): Linear(in_features=768, out_features=768, bias=False)
    )
    (output_projection): Linear(in_features=768, out_features=50005, bias=False)
  )
  (classification_heads): ModuleDict()
)
2022-08-28 16:15:52 | INFO | fairseq_cli.train | task: translation_from_pretrained_bart (TranslationFromPretrainedBARTTask)
2022-08-28 16:15:52 | INFO | fairseq_cli.train | model: mbart_base (BARTModel)
2022-08-28 16:15:52 | INFO | fairseq_cli.train | criterion: label_smoothed_cross_entropy (LabelSmoothedCrossEntropyCriterion)
2022-08-28 16:15:52 | INFO | fairseq_cli.train | num. model params: 141580032 (num. trained: 2359296)
2022-08-28 16:15:52 | INFO | fairseq.trainer | detected shared parameter: encoder.embed_tokens.weight <- decoder.embed_tokens.weight
2022-08-28 16:15:52 | INFO | fairseq.trainer | detected shared parameter: encoder.embed_tokens.weight <- decoder.output_projection.weight
2022-08-28 16:15:52 | INFO | fairseq.trainer | detected shared parameter: decoder.adaptive_block.fc_unit.bias <- decoder.adaptive_block.fc_unit2.bias
2022-08-28 16:15:52 | INFO | fairseq.trainer | detected shared parameter: decoder.adaptive_block.fc_unit.bias <- decoder.adaptive_block.fc_zero.bias
2022-08-28 16:15:52 | INFO | fairseq.trainer | detected shared parameter: decoder.adaptive_block.fc_unit.bias <- decoder.adaptive_block.fc_zero2.bias
2022-08-28 16:15:52 | INFO | fairseq.trainer | detected shared parameter: decoder.adaptive_block.fc_unit.bias <- decoder.output_projection.bias
2022-08-28 16:15:52 | INFO | fairseq.utils | ***********************CUDA enviroments for all 1 workers***********************
2022-08-28 16:15:52 | INFO | fairseq.utils | rank   0: capabilities =  7.0  ; total memory = 31.749 GB ; name = Tesla V100-SXM2-32GB                    
2022-08-28 16:15:52 | INFO | fairseq.utils | ***********************CUDA enviroments for all 1 workers***********************
2022-08-28 16:15:52 | INFO | fairseq_cli.train | training on 1 devices (GPUs/TPUs)
2022-08-28 16:15:52 | INFO | fairseq_cli.train | max tokens per GPU = None and max sentences per GPU = 16
-----------------knn load part of model-----------------
2022-08-28 16:16:02 | INFO | fairseq.trainer | loaded checkpoint /home/cluster/jgu/scratch/ssr/cli/out/mix/full_base_python_en_XX/checkpoint_best.pt (epoch 26 @ 0 updates)
2022-08-28 16:16:02 | INFO | fairseq.trainer | NOTE: your device may support faster training with --fp16
2022-08-28 16:16:02 | INFO | fairseq.trainer | loading train data for epoch 1
2022-08-28 16:16:02 | INFO | fairseq.data.data_utils | loaded 55538 examples from: /home/cluster/jgu/scratch/ssr/cli/out/mix/python/data-bin/train.python-en_XX.python
2022-08-28 16:16:02 | INFO | fairseq.data.data_utils | loaded 55538 examples from: /home/cluster/jgu/scratch/ssr/cli/out/mix/python/data-bin/train.python-en_XX.en_XX
2022-08-28 16:16:02 | INFO | fairseq.tasks.translation | /home/cluster/jgu/scratch/ssr/cli/out/mix/python/data-bin train python-en_XX 55538 examples
2022-08-28 16:16:02 | INFO | fairseq.trainer | begin training epoch 1
2022-08-28 16:16:12 | INFO | train_inner | {"epoch": 1, "update": 0.029, "loss": "2.94", "nll_loss": "0.936", "ppl": "1.91", "wps": "2313.8", "ups": "10.93", "wpb": "210.9", "bsz": "16", "num_updates": "100", "lr": "5e-06", "gnorm": "0.612", "train_wall": "9", "wall": "20"}
2022-08-28 16:16:20 | INFO | train_inner | {"epoch": 1, "update": 0.058, "loss": "2.875", "nll_loss": "0.888", "ppl": "1.85", "wps": "2401.9", "ups": "12.51", "wpb": "192", "bsz": "16", "num_updates": "200", "lr": "1e-05", "gnorm": "0.592", "train_wall": "8", "wall": "28"}
2022-08-28 16:16:28 | INFO | train_inner | {"epoch": 1, "update": 0.086, "loss": "2.895", "nll_loss": "0.913", "ppl": "1.88", "wps": "2439.6", "ups": "12.02", "wpb": "203", "bsz": "16", "num_updates": "300", "lr": "1.5e-05", "gnorm": "0.587", "train_wall": "8", "wall": "36"}
2022-08-28 16:16:36 | INFO | train_inner | {"epoch": 1, "update": 0.115, "loss": "2.859", "nll_loss": "0.883", "ppl": "1.84", "wps": "2504.7", "ups": "12.76", "wpb": "196.3", "bsz": "15.9", "num_updates": "400", "lr": "2e-05", "gnorm": "0.574", "train_wall": "8", "wall": "44"}
2022-08-28 16:16:45 | INFO | train_inner | {"epoch": 1, "update": 0.144, "loss": "2.884", "nll_loss": "0.91", "ppl": "1.88", "wps": "2506.6", "ups": "11.81", "wpb": "212.2", "bsz": "16", "num_updates": "500", "lr": "2.5e-05", "gnorm": "0.569", "train_wall": "8", "wall": "53"}
2022-08-28 16:16:53 | INFO | train_inner | {"epoch": 1, "update": 0.173, "loss": "2.903", "nll_loss": "0.937", "ppl": "1.91", "wps": "2505.1", "ups": "12.29", "wpb": "203.8", "bsz": "16", "num_updates": "600", "lr": "3e-05", "gnorm": "0.574", "train_wall": "8", "wall": "61"}
2022-08-28 16:17:01 | INFO | train_inner | {"epoch": 1, "update": 0.202, "loss": "2.892", "nll_loss": "0.924", "ppl": "1.9", "wps": "2630.6", "ups": "12.62", "wpb": "208.4", "bsz": "16", "num_updates": "700", "lr": "3.5e-05", "gnorm": "0.56", "train_wall": "8", "wall": "69"}
2022-08-28 16:17:10 | INFO | train_inner | {"epoch": 1, "update": 0.23, "loss": "2.878", "nll_loss": "0.913", "ppl": "1.88", "wps": "2326.6", "ups": "11.44", "wpb": "203.4", "bsz": "16", "num_updates": "800", "lr": "4e-05", "gnorm": "0.576", "train_wall": "9", "wall": "77"}
2022-08-28 16:17:18 | INFO | train_inner | {"epoch": 1, "update": 0.259, "loss": "2.887", "nll_loss": "0.922", "ppl": "1.89", "wps": "2490", "ups": "12.11", "wpb": "205.6", "bsz": "16", "num_updates": "900", "lr": "4.5e-05", "gnorm": "0.58", "train_wall": "8", "wall": "86"}
2022-08-28 16:17:26 | INFO | train_inner | {"epoch": 1, "update": 0.288, "loss": "2.874", "nll_loss": "0.91", "ppl": "1.88", "wps": "2505.6", "ups": "12", "wpb": "208.8", "bsz": "16", "num_updates": "1000", "lr": "5e-05", "gnorm": "0.555", "train_wall": "8", "wall": "94"}
2022-08-28 16:17:36 | INFO | train_inner | {"epoch": 1, "update": 0.317, "loss": "2.9", "nll_loss": "0.938", "ppl": "1.92", "wps": "2295.8", "ups": "10.53", "wpb": "218.1", "bsz": "16", "num_updates": "1100", "lr": "4.9995e-05", "gnorm": "0.555", "train_wall": "9", "wall": "104"}
2022-08-28 16:17:43 | INFO | train_inner | {"epoch": 1, "update": 0.346, "loss": "2.869", "nll_loss": "0.908", "ppl": "1.88", "wps": "2522.6", "ups": "12.98", "wpb": "194.4", "bsz": "16", "num_updates": "1200", "lr": "4.999e-05", "gnorm": "0.559", "train_wall": "8", "wall": "111"}
2022-08-28 16:17:51 | INFO | train_inner | {"epoch": 1, "update": 0.374, "loss": "2.865", "nll_loss": "0.902", "ppl": "1.87", "wps": "2596.1", "ups": "12.5", "wpb": "207.7", "bsz": "16", "num_updates": "1300", "lr": "4.9985e-05", "gnorm": "0.538", "train_wall": "8", "wall": "119"}
2022-08-28 16:18:00 | INFO | train_inner | {"epoch": 1, "update": 0.403, "loss": "2.877", "nll_loss": "0.919", "ppl": "1.89", "wps": "2515.5", "ups": "12.29", "wpb": "204.7", "bsz": "16", "num_updates": "1400", "lr": "4.998e-05", "gnorm": "0.555", "train_wall": "8", "wall": "127"}
2022-08-28 16:18:07 | INFO | train_inner | {"epoch": 1, "update": 0.432, "loss": "2.838", "nll_loss": "0.875", "ppl": "1.83", "wps": "2437.2", "ups": "12.65", "wpb": "192.7", "bsz": "16", "num_updates": "1500", "lr": "4.9975e-05", "gnorm": "0.54", "train_wall": "8", "wall": "135"}
2022-08-28 16:18:16 | INFO | train_inner | {"epoch": 1, "update": 0.461, "loss": "2.868", "nll_loss": "0.907", "ppl": "1.88", "wps": "2458.5", "ups": "11.96", "wpb": "205.5", "bsz": "16", "num_updates": "1600", "lr": "4.997e-05", "gnorm": "0.542", "train_wall": "8", "wall": "144"}
2022-08-28 16:18:24 | INFO | train_inner | {"epoch": 1, "update": 0.49, "loss": "2.856", "nll_loss": "0.892", "ppl": "1.86", "wps": "2539.7", "ups": "12.36", "wpb": "205.4", "bsz": "16", "num_updates": "1700", "lr": "4.9965e-05", "gnorm": "0.537", "train_wall": "8", "wall": "152"}
2022-08-28 16:18:33 | INFO | train_inner | {"epoch": 1, "update": 0.518, "loss": "2.881", "nll_loss": "0.92", "ppl": "1.89", "wps": "2409", "ups": "11.2", "wpb": "215.1", "bsz": "16", "num_updates": "1800", "lr": "4.996e-05", "gnorm": "0.537", "train_wall": "9", "wall": "161"}
2022-08-28 16:18:41 | INFO | train_inner | {"epoch": 1, "update": 0.547, "loss": "2.832", "nll_loss": "0.87", "ppl": "1.83", "wps": "2448.2", "ups": "12.49", "wpb": "196", "bsz": "16", "num_updates": "1900", "lr": "4.9955e-05", "gnorm": "0.536", "train_wall": "8", "wall": "169"}
2022-08-28 16:18:49 | INFO | train_inner | {"epoch": 1, "update": 0.576, "loss": "2.855", "nll_loss": "0.892", "ppl": "1.86", "wps": "2403.7", "ups": "12", "wpb": "200.3", "bsz": "16", "num_updates": "2000", "lr": "4.99499e-05", "gnorm": "0.53", "train_wall": "8", "wall": "177"}
2022-08-28 16:18:59 | INFO | train_inner | {"epoch": 1, "update": 0.605, "loss": "2.919", "nll_loss": "0.963", "ppl": "1.95", "wps": "2199.8", "ups": "10.15", "wpb": "216.7", "bsz": "16", "num_updates": "2100", "lr": "4.99449e-05", "gnorm": "0.531", "train_wall": "10", "wall": "187"}
2022-08-28 16:19:07 | INFO | train_inner | {"epoch": 1, "update": 0.634, "loss": "2.835", "nll_loss": "0.872", "ppl": "1.83", "wps": "2374.9", "ups": "11.96", "wpb": "198.6", "bsz": "16", "num_updates": "2200", "lr": "4.99399e-05", "gnorm": "0.533", "train_wall": "8", "wall": "195"}
2022-08-28 16:19:15 | INFO | train_inner | {"epoch": 1, "update": 0.662, "loss": "2.881", "nll_loss": "0.923", "ppl": "1.9", "wps": "2794.9", "ups": "13.06", "wpb": "214", "bsz": "16", "num_updates": "2300", "lr": "4.99349e-05", "gnorm": "0.537", "train_wall": "8", "wall": "203"}
2022-08-28 16:19:21 | INFO | train_inner | {"epoch": 1, "update": 0.691, "loss": "2.844", "nll_loss": "0.885", "ppl": "1.85", "wps": "3246.2", "ups": "16.8", "wpb": "193.2", "bsz": "16", "num_updates": "2400", "lr": "4.99299e-05", "gnorm": "0.538", "train_wall": "6", "wall": "209"}
2022-08-28 16:19:28 | INFO | train_inner | {"epoch": 1, "update": 0.72, "loss": "2.872", "nll_loss": "0.912", "ppl": "1.88", "wps": "2993", "ups": "14.12", "wpb": "212", "bsz": "16", "num_updates": "2500", "lr": "4.99249e-05", "gnorm": "0.511", "train_wall": "7", "wall": "216"}
2022-08-28 16:19:34 | INFO | train_inner | {"epoch": 1, "update": 0.749, "loss": "2.849", "nll_loss": "0.885", "ppl": "1.85", "wps": "3252.4", "ups": "15.69", "wpb": "207.3", "bsz": "16", "num_updates": "2600", "lr": "4.99199e-05", "gnorm": "0.515", "train_wall": "6", "wall": "222"}
2022-08-28 16:19:41 | INFO | train_inner | {"epoch": 1, "update": 0.778, "loss": "2.858", "nll_loss": "0.898", "ppl": "1.86", "wps": "3203.6", "ups": "14.91", "wpb": "214.9", "bsz": "16", "num_updates": "2700", "lr": "4.99149e-05", "gnorm": "0.511", "train_wall": "7", "wall": "229"}
2022-08-28 16:19:48 | INFO | train_inner | {"epoch": 1, "update": 0.806, "loss": "2.853", "nll_loss": "0.891", "ppl": "1.85", "wps": "2803.9", "ups": "13.71", "wpb": "204.6", "bsz": "16", "num_updates": "2800", "lr": "4.99099e-05", "gnorm": "0.521", "train_wall": "7", "wall": "236"}
2022-08-28 16:19:56 | INFO | train_inner | {"epoch": 1, "update": 0.835, "loss": "2.842", "nll_loss": "0.88", "ppl": "1.84", "wps": "2734.4", "ups": "13.74", "wpb": "199.1", "bsz": "16", "num_updates": "2900", "lr": "4.99049e-05", "gnorm": "0.521", "train_wall": "7", "wall": "244"}
2022-08-28 16:20:02 | INFO | train_inner | {"epoch": 1, "update": 0.864, "loss": "2.86", "nll_loss": "0.899", "ppl": "1.86", "wps": "3146.5", "ups": "15.01", "wpb": "209.6", "bsz": "16", "num_updates": "3000", "lr": "4.98999e-05", "gnorm": "0.524", "train_wall": "7", "wall": "250"}
2022-08-28 16:20:09 | INFO | train_inner | {"epoch": 1, "update": 0.893, "loss": "2.841", "nll_loss": "0.878", "ppl": "1.84", "wps": "2919", "ups": "14.58", "wpb": "200.2", "bsz": "16", "num_updates": "3100", "lr": "4.98949e-05", "gnorm": "0.514", "train_wall": "7", "wall": "257"}
2022-08-28 16:20:16 | INFO | train_inner | {"epoch": 1, "update": 0.922, "loss": "2.867", "nll_loss": "0.907", "ppl": "1.88", "wps": "3185.7", "ups": "15.05", "wpb": "211.7", "bsz": "16", "num_updates": "3200", "lr": "4.98899e-05", "gnorm": "0.507", "train_wall": "7", "wall": "264"}
2022-08-28 16:20:22 | INFO | train_inner | {"epoch": 1, "update": 0.95, "loss": "2.856", "nll_loss": "0.895", "ppl": "1.86", "wps": "3142.1", "ups": "15.61", "wpb": "201.3", "bsz": "16", "num_updates": "3300", "lr": "4.98849e-05", "gnorm": "0.532", "train_wall": "6", "wall": "270"}
2022-08-28 16:20:29 | INFO | train_inner | {"epoch": 1, "update": 0.979, "loss": "2.856", "nll_loss": "0.897", "ppl": "1.86", "wps": "3217.2", "ups": "15.58", "wpb": "206.5", "bsz": "16", "num_updates": "3400", "lr": "4.98799e-05", "gnorm": "0.516", "train_wall": "6", "wall": "277"}
2022-08-28 16:20:34 | INFO | fairseq_cli.train | begin validation on "valid" subset
/net/cephfs/scratch/jgu/ssr/fairseq/utils.py:342: UserWarning: amp_C fused kernels unavailable, disabling multi_tensor_l2norm; you may get better performance by installing NVIDIA's apex library
  "amp_C fused kernels unavailable, disabling multi_tensor_l2norm; "
2022-08-28 16:29:54 | INFO | valid | {"epoch": 1, "valid_loss": "6.207", "valid_nll_loss": "4.685", "valid_ppl": "25.73", "valid_bleu": "10.83", "valid_wps": "425.2", "valid_wpb": "205.7", "valid_bsz": "16", "valid_num_updates": "3472"}
2022-08-28 16:29:54 | INFO | fairseq_cli.train | begin save checkpoint
2022-08-28 16:29:56 | INFO | fairseq.checkpoint_utils | saved checkpoint /home/cluster/jgu/scratch/ssr/cli/out/mix/full_ada_python_en_XX/checkpoint_best.pt (epoch 1 @ 3472 updates, score 10.83) (writing took 2.134430345147848 seconds)
2022-08-28 16:29:56 | INFO | fairseq_cli.train | end of epoch 1 (average epoch stats below)
2022-08-28 16:29:56 | INFO | train | {"epoch": 1, "train_loss": "2.87", "train_nll_loss": "0.905", "train_ppl": "1.87", "train_wps": "854.5", "train_ups": "4.17", "train_wpb": "205.1", "train_bsz": "16", "train_num_updates": "3472", "train_lr": "4.98763e-05", "train_gnorm": "0.544", "train_train_wall": "267", "train_wall": "844"}
2022-08-28 16:29:56 | INFO | fairseq_cli.train | done training in 833.9 seconds
/net/cephfs/scratch/jgu/ssr/fairseq/search.py:140: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  beams_buf = indices_buf // vocab_size
/net/cephfs/scratch/jgu/ssr/fairseq/sequence_generator.py:651: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  unfin_idx = idx // beam_size
@ Completed
@ Stage 5
/net/cephfs/scratch/jgu/ssr/fairseq/search.py:140: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  beams_buf = indices_buf // vocab_size
/net/cephfs/scratch/jgu/ssr/fairseq/sequence_generator.py:651: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  unfin_idx = idx // beam_size
WARNING (theano.tensor.blas): We did not find a dynamic library in the library_dir of the library we use for blas. If you use ATLAS, make sure to compile it with dynamics library.
c_bleu = 26.63 | s_bleu = 34.89 | meteor = 22.58 | rouge = 45.15
rouge_coco = 50.72
/net/cephfs/scratch/jgu/ssr/fairseq/search.py:140: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  beams_buf = indices_buf // vocab_size
/net/cephfs/scratch/jgu/ssr/fairseq/sequence_generator.py:651: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  unfin_idx = idx // beam_size
WARNING (theano.tensor.blas): We did not find a dynamic library in the library_dir of the library we use for blas. If you use ATLAS, make sure to compile it with dynamics library.
c_bleu = 26.34 | s_bleu = 34.82 | meteor = 22.38 | rouge = 45.05
rouge_coco = 50.66
@ Completed
