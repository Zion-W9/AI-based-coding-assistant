@ Stage 3
Create Datastore
2022-08-17 19:26:21 | INFO | fairseq_cli.validate | loading model(s) from /home/cluster/jgu/scratch/ssr/cli/out/mix/zero_base_java_en_XX/checkpoint_best.pt
2022-08-17 19:26:25 | INFO | fairseq.tasks.translation | [java] dictionary: 50001 types
2022-08-17 19:26:25 | INFO | fairseq.tasks.translation | [en_XX] dictionary: 50001 types
2022-08-17 19:26:32 | INFO | fairseq_cli.validate | Namespace(activation_dropout=0.0, activation_fn='gelu', adam_betas='(0.9, 0.999)', adam_eps=1e-06, adaptive_input=False, adaptive_softmax_cutoff=None, adaptive_softmax_dropout=0, add_lang_token=True, all_gather_list_size=16384, arch='mbart_base', attention_dropout=0.1, best_checkpoint_metric='loss', bf16=False, bpe='sentencepiece', broadcast_buffers=False, bucket_cap_mb=25, checkpoint_suffix='', clip_norm=0.1, cpu=False, criterion='cross_entropy', cross_self_attention=False, curriculum=0, data='/home/cluster/jgu/scratch/ssr/cli/out/mix/java/data-bin', data_buffer_size=10, dataset_impl='mmap', ddp_backend='no_c10d', decoder_attention_heads=12, decoder_embed_dim=768, decoder_embed_path=None, decoder_ffn_embed_dim=3072, decoder_input_dim=768, decoder_layerdrop=0, decoder_layers=6, decoder_layers_to_keep=None, decoder_learned_pos=True, decoder_normalize_before=False, decoder_output_dim=768, device_id=0, disable_validation=False, distributed_backend='nccl', distributed_init_method='tcp://localhost:16473', distributed_no_spawn=False, distributed_port=-1, distributed_rank=0, distributed_world_size=8, distributed_wrapper='DDP', dropout=0.1, dstore_filename=None, dstore_fp16=True, dstore_mmap='/home/cluster/jgu/scratch/ssr/cli/out/mix/java/zero_datastore', dstore_size=1283405, empty_cache_freq=0, encoder_attention_heads=12, encoder_embed_dim=768, encoder_embed_path=None, encoder_ffn_embed_dim=3072, encoder_layerdrop=0, encoder_layers=6, encoder_layers_to_keep=None, encoder_learned_pos=True, encoder_normalize_before=False, end_learning_rate=0.0, eval_bleu_detok='space', eval_bleu_remove_bpe=None, eval_tokenized_bleu=False, fast_stat_sync=False, find_unused_parameters=False, fix_batches_to_gpus=False, fixed_validation_seed=None, force_anneal=None, fp16=True, fp16_init_scale=128, fp16_no_flatten_grads=False, fp16_scale_tolerance=0.0, fp16_scale_window=None, insert=0.0, k=5, keep_best_checkpoints=-1, keep_interval_updates=10, keep_last_epochs=-1, knn_lambda=0.5, knn_sim_metric=None, knn_temperature=10, langs='java,python,en_XX', layernorm_embedding=True, left_pad_source=True, left_pad_target=False, localsgd_frequency=3, log_format='json', log_interval=10, lr=[0.0003], lr_scheduler='polynomial_decay', mask=0.3, mask_length='span-poisson', mask_random=0.1, max_epoch=0, max_sentences=32, max_sentences_valid=32, max_source_positions=1024, max_target_positions=1024, max_tokens=4096, max_tokens_valid=2048, max_update=100000, maximize_best_checkpoint_metric=False, memory_efficient_bf16=False, memory_efficient_fp16=False, min_loss_scale=0.0001, min_lr=-1, model_parallel_size=1, move_dstore_to_mem=False, multilang_sampling_alpha=0.3, no_cross_attention=False, no_epoch_checkpoints=True, no_last_checkpoints=False, no_progress_bar=False, no_save=False, no_save_optimizer_state=False, no_scale_embedding=False, no_seed_provided=False, no_token_positional_embeddings=False, no_whole_word_mask_langs='', nprocs_per_node=8, num_batch_buckets=0, num_workers=4, only_train_final_output=False, optimizer='adam', optimizer_overrides='{}', partially_finetune=False, path='/home/cluster/jgu/scratch/ssr/cli/out/mix/zero_base_java_en_XX/checkpoint_best.pt', patience=-1, permute=0.0, permute_sentences=0.0, poisson_lambda=3.5, pooler_activation_fn='tanh', pooler_dropout=0.0, power=1.0, probe=32, profile=False, quant_noise_pq=0, quant_noise_pq_block_size=8, quant_noise_scalar=0, quantization_config_path=None, relu_dropout=0.0, replace_length=1, required_batch_size_multiple=8, reset_dataloader=False, reset_lr_scheduler=False, reset_meters=False, reset_optimizer=False, restore_file='/local/wasiahmad/codebart/models/checkpoint_last.pt', rotate=0.0, sample_break_mode='complete_doc', save_dir='/local/wasiahmad/codebart/models', save_interval=1, save_interval_updates=1000, seed=1234, sentence_avg=False, sentencepiece_model='/local/wasiahmad/codebart/sentencepiece.bpe.model', share_all_embeddings=True, share_decoder_input_output_embed=True, shuffle_instance=False, skip_invalid_size_inputs_valid_test=True, slowmo_algorithm='LocalSGD', slowmo_momentum=None, source_lang='java', stop_time_hours=0, target_lang='en_XX', task='translation_from_pretrained_bart', tensorboard_logdir='/local/wasiahmad/codebart/models/tensorboard_logs', threshold_loss_scale=None, tie_adaptive_weights=False, tokenizer=None, tokens_per_sample=512, total_num_update=100000, tpu=False, train_subset='train', truncate_source=False, update_freq=[60], upsample_primary=1, use_bmuf=False, use_gpu_to_search=False, use_knn_datastore=False, use_old_adam=False, user_dir=None, valid_subset='train', validate_interval=1, warmup_updates=2000, weight_decay=0.01)
Saving fp16
2022-08-17 19:26:33 | INFO | fairseq.data.data_utils | loaded 69708 examples from: /home/cluster/jgu/scratch/ssr/cli/out/mix/java/data-bin/train.java-en_XX.java
2022-08-17 19:26:33 | INFO | fairseq.data.data_utils | loaded 69708 examples from: /home/cluster/jgu/scratch/ssr/cli/out/mix/java/data-bin/train.java-en_XX.en_XX
2022-08-17 19:26:33 | INFO | fairseq.tasks.translation | /home/cluster/jgu/scratch/ssr/cli/out/mix/java/data-bin train java-en_XX 69708 examples
/home/cluster/jgu/scratch/ssr/cli/ds_build.py:69: DeprecationWarning: `np.int` is a deprecated alias for the builtin `int`. To silence this warning, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  dstore_vals = np.memmap(args.dstore_mmap + '/vals.npy', dtype=np.int, mode='w+',
/home/cluster/jgu/scratch/ssr/cli/ds_build.py:157: DeprecationWarning: `np.int` is a deprecated alias for the builtin `int`. To silence this warning, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  dstore_vals[dstore_idx:reduce_size + dstore_idx] = target.unsqueeze(-1).cpu().numpy().astype(np.int)
992
1577
2545
3134
3784
5053
5675
7164
7768
9661
10373
12500
13643
16302
17786
18573
21222
23339
24067
26192
28608
30060
31928
34793
37128
38171
40039
42624
45695
47585
49075
50757
53051
55662
57777
58615
60244
62387
65186
67962
70121
71176
72660
74530
77173
79814
81561
82074
83576
85504
87983
90900
93334
94771
95975
97535
99519
102154
105058
107128
107795
108964
110553
112677
115470
117830
118948
120243
121958
124183
126952
129471
129826
131033
132670
134852
137860
140209
141985
143101
144571
146436
149128
151642
152469
153639
155184
157190
159943
162703
165168
166352
167470
169008
170969
173788
176253
177069
178135
179488
181218
183635
186293
188098
189077
190369
192071
194620
196613
197918
198995
200427
202326
205191
207366
208383
209308
210471
211865
213737
216434
218304
219133
220088
221340
222950
225147
227565
228806
229703
230777
232119
234005
236396
237736
238583
239703
241076
242937
245489
247781
248248
249174
250278
251615
253365
256127
258158
258617
259458
260562
262035
263950
266536
268253
269045
270093
271436
273232
275828
277244
278028
279083
280432
282269
284601
285747
286460
287418
288641
290256
292514
294355
295257
296028
296986
298188
299641
301505
303399
304952
305704
306696
307901
309452
311326
313916
315248
315969
316909
318096
319664
322192
324462
324972
325656
326536
327616
328972
330736
332948
334699
335346
336168
337195
338477
340121
342711
344875
345498
346302
347268
348414
349857
351905
354044
354665
355401
356267
357330
358659
360221
362667
364803
365611
366332
367232
368323
369781
371923
373950
374886
375478
376225
377116
378230
379772
382113
384121
384695
385445
386344
387503
389046
391369
392642
393229
393939
394792
395836
397288
399399
401504
402092
402824
403729
404832
406287
408174
410023
411423
412051
412836
413812
415064
416650
418812
421091
421572
422217
423015
423892
424962
426335
428262
430408
431248
431820
432521
433372
434413
435869
438057
439541
440019
440636
441355
442172
443173
444397
446116
448138
448508
449073
449753
450550
451505
452653
454192
456266
456726
457209
457814
458577
459468
460621
462197
464134
465007
465566
466234
467037
468000
469191
470886
473410
474359
474943
475666
476494
477517
478956
480863
481729
482339
483085
483990
485222
487197
489552
489950
490450
491059
491780
492629
493655
494932
496818
498990
499431
500000
500678
501534
502629
504102
506460
509092
511153
511571
512119
512786
513592
514586
515963
518326
519302
519779
520356
521052
521891
522902
524391
526367
527514
528016
528637
529397
530306
531467
533185
534470
534960
535544
536191
536953
537882
539148
541183
542361
542872
543479
544185
545008
546028
547148
548268
549388
550522
552281
554029
554504
555095
555807
556615
557556
558762
560895
562503
563044
563731
564539
565522
566909
569277
570668
571066
571536
572090
572725
573480
574371
575491
577293
578563
578962
579434
580005
580680
581545
582678
584720
585104
585612
586231
586993
588036
589606
590786
591197
591685
592246
592900
593711
594799
596487
597897
598285
598772
599341
599997
600787
601690
602925
604889
605977
606416
606941
607554
608303
609231
610380
612165
612898
613346
613891
614544
615334
616324
617727
619673
620057
620558
621183
621918
622825
624037
626162
626990
627441
627982
628611
629380
630365
631674
633790
634395
634827
635337
635891
636551
637345
638360
639677
641642
642007
642470
643018
643659
644429
645363
646612
648614
649853
650286
650810
651470
652273
653328
654954
656061
656419
656871
657390
657971
658669
659572
660704
662579
664109
664473
664920
665464
666113
666920
667966
670103
670522
670947
671445
672028
672733
673542
674584
676307
678985
679299
679682
680118
680638
681289
682101
683174
685313
685698
686067
686515
687035
687605
688274
689027
689975
691414
693013
693371
693771
694171
694600
695106
695705
696439
697351
698479
699821
701804
702125
702523
703007
703592
704342
705300
706653
707836
708225
708696
709250
709937
710767
711822
713449
714668
715022
715453
715975
716616
717402
718415
719926
720971
721346
721792
722336
723006
723895
725220
727111
727476
727914
728472
729164
729999
731008
732650
733580
733956
734418
735010
735760
736767
738372
740261
740608
741034
741552
742168
742885
743747
744897
746891
747206
747607
748092
748665
749380
750316
751835
753271
753651
754121
754726
755499
756582
758682
759098
759540
760059
760711
761622
763010
764297
764673
765151
765726
766398
767266
768494
770414
770649
770937
771275
771651
772097
772577
773085
773675
774431
775523
776981
777269
777610
778009
778489
779091
779905
781132
782071
782358
782703
783087
783471
783868
784335
784894
785541
786396
787889
788469
788783
789157
789581
790128
790854
791829
793372
794005
794337
794711
795161
795692
796326
797193
798586
799189
799481
799827
800251
800787
801480
802322
803491
804443
804752
805132
805590
806159
806942
808036
809532
809797
810117
810507
810967
811515
812261
813312
814783
815062
815421
815856
816391
817087
817871
818951
820688
820949
821285
821700
822208
822838
823622
824708
826471
826728
827067
827451
827835
828253
828740
829434
830456
831916
832196
832548
832972
833458
834049
834802
835963
836959
837231
837571
837984
838496
839170
840110
841313
842848
843138
843519
843994
844662
845593
846924
847165
847486
847857
848318
848918
849782
851193
851971
852306
852707
853210
853875
854852
856560
856804
857136
857539
858014
858594
859339
860492
861608
861900
862245
862664
863145
863731
864562
866343
867558
867858
868229
868678
869223
869935
870982
872355
872630
872964
873393
873959
874749
876027
876878
877134
877441
877817
878251
878812
879535
880527
882293
882565
882900
883312
883850
884586
886085
887039
887345
887749
888272
888971
889959
891517
892735
893029
893403
893919
894577
895644
896465
896752
897123
897599
898227
899055
900383
901308
901628
902023
902503
903085
903823
904711
905911
906467
906674
906928
907240
907602
908055
908599
909271
910395
911328
911569
911861
912219
912657
913234
913951
915109
915704
915921
916185
916501
916899
917418
918145
919316
920302
920499
920746
921033
921360
921754
922235
922790
923508
924537
925561
925775
926045
926353
926710
927134
927634
928270
929100
929763
929965
930199
930474
930825
931247
931792
932487
933450
934501
934701
934941
935248
935608
936058
936617
937345
938466
938662
938940
939279
939700
940237
941097
941896
942135
942435
942772
943242
943847
944650
946014
946217
946488
946814
947200
947680
948302
949186
950516
950707
950965
951288
951672
952155
952798
953779
954375
954613
954923
955328
955851
956632
958223
958411
958670
958985
959350
959807
960401
961291
962262
962474
962763
963103
963539
964118
965187
965766
966006
966325
966758
967343
968259
969387
970675
971246
971467
971741
972070
972459
972929
973571
974590
975139
975355
975599
975904
976253
976713
977270
977878
978890
979237
979486
979786
980164
980646
981239
982119
983326
983548
983820
984180
984642
985288
986227
986434
986693
987009
987439
988008
988751
989701
989927
990208
990560
991062
991804
992954
993172
993491
993986
994739
996256
996473
996731
997079
997520
997992
998639
999533
1000618
1000842
1001126
1001482
1001974
1002789
1003716
1004740
1004957
1005228
1005574
1006009
1006581
1007473
1008351
1008569
1008849
1009201
1009641
1010243
1011098
1012070
1012301
1012607
1013056
1013714
1014617
1014879
1015213
1015627
1016146
1017252
1017566
1017858
1018237
1018735
1019487
1020556
1020750
1020981
1021287
1021661
1022232
1023184
1023823
1024113
1024592
1025375
1026652
1026871
1027166
1027550
1028030
1028768
1029704
1029952
1030290
1030733
1031355
1032498
1033038
1033312
1033676
1034242
1035345
1035918
1036192
1036559
1037119
1037953
1038765
1039011
1039364
1039817
1040487
1041740
1042010
1042368
1042880
1043788
1044330
1044589
1044942
1045482
1046459
1046889
1047167
1047534
1047983
1048609
1049602
1049835
1050155
1050539
1050984
1051598
1052726
1052947
1053249
1053655
1054257
1055193
1055417
1055729
1056198
1056921
1057731
1058283
1058422
1058597
1058803
1059041
1059339
1059702
1060234
1061353
1061853
1062023
1062230
1062487
1062803
1063223
1063825
1064465
1064587
1064742
1064930
1065164
1065483
1065953
1066971
1067560
1067712
1067896
1068135
1068441
1068830
1069338
1070123
1070247
1070423
1070653
1070948
1071315
1071831
1072960
1073186
1073374
1073599
1073871
1074276
1074912
1075467
1075619
1075796
1076034
1076337
1076802
1077652
1078260
1078414
1078601
1078827
1079101
1079515
1080263
1080546
1080728
1080957
1081265
1081678
1082305
1083022
1083163
1083337
1083562
1083839
1084224
1084896
1085471
1085631
1085834
1086073
1086389
1086866
1087445
1087588
1087770
1087971
1088233
1088609
1089207
1089742
1089887
1090080
1090318
1090609
1090996
1091463
1092229
1092490
1092653
1092847
1093088
1093405
1093834
1094420
1095256
1095391
1095565
1095782
1096060
1096403
1096852
1097497
1098225
1098375
1098569
1098795
1099087
1099498
1100107
1100870
1101012
1101186
1101391
1101615
1101848
1102167
1102610
1103307
1104185
1104335
1104533
1104808
1105214
1106064
1106287
1106477
1106699
1107004
1107499
1108165
1108334
1108548
1108843
1109361
1110342
1110659
1110832
1111052
1111345
1111772
1112484
1113026
1113205
1113455
1113786
1114314
1114995
1115143
1115338
1115634
1116024
1116579
1117406
1117545
1117732
1117987
1118364
1118885
1119440
1119610
1119848
1120184
1120753
1121419
1121551
1121732
1121966
1122308
1122917
1123691
1123846
1124085
1124471
1125099
1125978
1126203
1126402
1126717
1127167
1127905
1128044
1128191
1128363
1128587
1128907
1129390
1130149
1131144
1131291
1131475
1131717
1132072
1132490
1133248
1133393
1133587
1133884
1134355
1134881
1135056
1135317
1135717
1136275
1136758
1136928
1137169
1137510
1138100
1138792
1138964
1139201
1139547
1140082
1140584
1140755
1140947
1141177
1141480
1141866
1142537
1143106
1143258
1143467
1143750
1144122
1144657
1144988
1145163
1145375
1145656
1146057
1146759
1147179
1147356
1147598
1147981
1148607
1148887
1149108
1149406
1149764
1150258
1151133
1152010
1152192
1152464
1152850
1153506
1153861
1154040
1154276
1154585
1155146
1155844
1156012
1156221
1156506
1156955
1157671
1157811
1157997
1158228
1158573
1159115
1159758
1160347
1160542
1160890
1161590
1162054
1162245
1162480
1162897
1163675
1163815
1164017
1164330
1164906
1165052
1165240
1165511
1165903
1166653
1167277
1167443
1167664
1167992
1168647
1169224
1169394
1169623
1170035
1170759
1170898
1171110
1171445
1172024
1172457
1172804
1173511
1173648
1173860
1174149
1174784
1175118
1175337
1175645
1176148
1176735
1176940
1177249
1177727
1178776
1178932
1179139
1179441
1179983
1180407
1180567
1180795
1181109
1181505
1182193
1182339
1182552
1182897
1183515
1183664
1183862
1184129
1184626
1185109
1185252
1185442
1185708
1186320
1186455
1186635
1186892
1187294
1188031
1188171
1188348
1188637
1189112
1189991
1190122
1190276
1190466
1190707
1191051
1191569
1192299
1192449
1192671
1193075
1193890
1194035
1194240
1194555
1195107
1195273
1195525
1195913
1196693
1196928
1197143
1197452
1198169
1198327
1198568
1199030
1200109
1200234
1200394
1200616
1200963
1201495
1201675
1201985
1202419
1202974
1203149
1203460
1204265
1204391
1204605
1204996
1205705
1205881
1206248
1206629
1206819
1207073
1207665
1208061
1208258
1208599
1209144
1209704
1210503
1210658
1210879
1211271
1211848
1212020
1212280
1212748
1213494
1213680
1213969
1214344
1215310
1215479
1215736
1216200
1216718
1216914
1217391
1218162
1218352
1218629
1219349
1219691
1219897
1220349
1220802
1220983
1221253
1221784
1222119
1222353
1222757
1223170
1223380
1223761
1224731
1224870
1225066
1225543
1225906
1226093
1226409
1226673
1227035
1227108
1227218
1227376
1227572
1227893
1228235
1228304
1228390
1228500
1228618
1228754
1228890
1229026
1229191
1229512
1229944
1230014
1230101
1230220
1230410
1230722
1231320
1231380
1231460
1231565
1231687
1231868
1232115
1232413
1232844
1233079
1233157
1233249
1233381
1233553
1233776
1234032
1234227
1234317
1234427
1234550
1234691
1234846
1235034
1235315
1235672
1235752
1235869
1236036
1236309
1236692
1236785
1236911
1237065
1237311
1237777
1237851
1237954
1238108
1238452
1238527
1238627
1238780
1239032
1239261
1239336
1239437
1239569
1239740
1239977
1240394
1240465
1240561
1240707
1240943
1241468
1241712
1241805
1241921
1242054
1242235
1242533
1243089
1243167
1243274
1243414
1243594
1243857
1244414
1244658
1244745
1244879
1245097
1245631
1245699
1245785
1245921
1246131
1246426
1246953
1247045
1247278
1247594
1247708
1247863
1248070
1248376
1248603
1248674
1248776
1248902
1249075
1249318
1249748
1250430
1250507
1250611
1250741
1250912
1251184
1251335
1251417
1251520
1251668
1251913
1252456
1252516
1252605
1252734
1252920
1253348
1253696
1253786
1253921
1254121
1254419
1254614
1254702
1254837
1255026
1255422
1255487
1255613
1255777
1256225
1256288
1256393
1256533
1256813
1257215
1257679
1257960
1258037
1258143
1258314
1258638
1258747
1258833
1258962
1259179
1259550
1259629
1259741
1259871
1260031
1260356
1260533
1260628
1260753
1260989
1261457
1261605
1261727
1261935
1262404
1262467
1262560
1262702
1262895
1263386
1263464
1263561
1263678
1263838
1264093
1264486
1264697
1264785
1264873
1264983
1265102
1265301
1265638
1266229
1266294
1266378
1266491
1266660
1266863
1267303
1267368
1267463
1267574
1267755
1268057
1268132
1268243
1268405
1268945
1269198
1269293
1269400
1269524
1269759
1269836
1269939
1270077
1270245
1270413
1270648
1270888
1270950
1271046
1271176
1271358
1271635
1271834
1271904
1272008
1272139
1272329
1272727
1272882
1272973
1273117
1273300
1273534
1273975
1274506
1274579
1274680
1274867
1275048
1275124
1275219
1275334
1275523
1275891
1276170
1276274
1276472
1276828
1277148
1277237
1277364
1277579
1277666
1277815
1278100
1278464
1278553
1278702
1278945
1279404
1279569
1279669
1279809
1280203
1280287
1280391
1280549
1280922
1280989
1281092
1281252
1281602
1282022
1282123
1282269
1282519
1282919
1283164
1283306
1283405
much more than dstore size break
Build Faiss Index
/home/cluster/jgu/scratch/ssr/cli/ds_train.py:28: DeprecationWarning: `np.int` is a deprecated alias for the builtin `int`. To silence this warning, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  vals = np.memmap(args.dstore_mmap + '/vals.npy', dtype=np.int, mode='r', shape=(args.dstore_size, 1))
Namespace(code_size=64, dimension=768, dstore_fp16=True, dstore_mmap='/home/cluster/jgu/scratch/ssr/cli/out/mix/java/zero_datastore', dstore_size=1283405, faiss_index='/home/cluster/jgu/scratch/ssr/cli/out/mix/java/zero_datastore/knn_index', ncentroids=4096, probe=32, seed=1, starting_point=0)
done.
Start put index to gpu
Training Index
[1254121 1090986  296881  979708 1012452 1221391  554957  845181 1000300
   26129]
[[ 0.1956  -0.345    3.275   ... -0.6885  -0.4067   1.34   ]
 [ 2.084    0.2944   0.833   ... -2.645    0.0678  -1.023  ]
 [ 0.895    0.3457  -2.045   ... -1.825    0.4856  -2.77   ]
 ...
 [-0.75    -1.881    0.1868  ...  1.972    0.7017   0.2306 ]
 [ 1.086   -0.1405  -0.01149 ... -1.555    2.363   -1.794  ]
 [ 2.787   -0.12286  1.576   ... -2.393   -1.084   -1.168  ]]
Training took 25.939562797546387 s
Writing index after training
Writing index took 0.01749253273010254 s
Adding Keys
Added 1000000 tokens so far
Writing Index 1000000
Adding total 1283405 keys
Adding took 7.904001474380493 s
Writing Index
Writing index took 0.23983979225158691 s
@ Completed
@ Stage 4
/net/cephfs/scratch/jgu/ssr/fairseq/search.py:140: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  beams_buf = indices_buf // vocab_size
/net/cephfs/scratch/jgu/ssr/fairseq/sequence_generator.py:651: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  unfin_idx = idx // beam_size
WARNING (theano.tensor.blas): We did not find a dynamic library in the library_dir of the library we use for blas. If you use ATLAS, make sure to compile it with dynamics library.
c_bleu = 0.19 | s_bleu = 1.17 | meteor = 3.83 | rouge = 4.69
@ Completed
slurmstepd: Exceeded step memory limit at some point.
