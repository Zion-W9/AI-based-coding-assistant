@ Stage 4
2022-08-29 00:33:06 | INFO | fairseq_cli.train | Namespace(activation_fn='gelu', adam_betas='(0.9, 0.98)', adam_eps=1e-06, adaptive_softmax_cutoff=None, adaptive_softmax_dropout=0, all_gather_list_size=16384, arch='mbart_base', attention_dropout=0.0, batch_size=32, batch_size_valid=32, best_checkpoint_metric='bleu', bf16=False, bpe='sentencepiece', broadcast_buffers=False, bucket_cap_mb=25, checkpoint_shard_count=1, checkpoint_suffix='', clip_norm=0.0, cpu=False, criterion='label_smoothed_cross_entropy', cross_self_attention=False, curriculum=0, data='/home/cluster/jgu/scratch/ssr/cli/out/mix/python/data-bin', data_buffer_size=10, dataset_impl=None, ddp_backend='no_c10d', decoder_attention_heads=12, decoder_embed_dim=768, decoder_embed_path=None, decoder_ffn_embed_dim=3072, decoder_input_dim=768, decoder_layerdrop=0, decoder_layers=6, decoder_layers_to_keep=None, decoder_learned_pos=True, decoder_normalize_before=False, decoder_output_dim=768, device_id=0, disable_validation=False, distributed_backend='nccl', distributed_init_method=None, distributed_no_spawn=False, distributed_num_procs=1, distributed_port=-1, distributed_rank=0, distributed_world_size=1, distributed_wrapper='DDP', dropout=0.1, dstore_filename='/home/cluster/jgu/scratch/ssr/cli/out/mix/python/full_datastore', dstore_fp16=True, dstore_size=601026, empty_cache_freq=0, encoder_attention_heads=12, encoder_embed_dim=768, encoder_embed_path=None, encoder_ffn_embed_dim=3072, encoder_layerdrop=0, encoder_layers=6, encoder_layers_to_keep=None, encoder_learned_pos=True, encoder_normalize_before=False, end_learning_rate=0.0, eval_bleu=True, eval_bleu_args='{"beam": 6}', eval_bleu_detok='space', eval_bleu_detok_args=None, eval_bleu_print_samples=False, eval_bleu_remove_bpe='sentencepiece', eval_tokenized_bleu=True, fast_stat_sync=False, find_unused_parameters=False, finetune_from_model=None, fix_batches_to_gpus=False, fixed_validation_seed=None, force_anneal=None, fp16=False, fp16_init_scale=128, fp16_no_flatten_grads=False, fp16_scale_tolerance=0.0, fp16_scale_window=None, gen_subset='test', ignore_prefix_size=0, k=2, keep_best_checkpoints=-1, keep_interval_updates=-1, keep_last_epochs=-1, knn_lambda=0.5, knn_sim_metric='IP', knn_temperature=10.0, label_smoothing=0.1, langs='java,python,en_XX', layernorm_embedding=True, left_pad_source='True', left_pad_target='False', load_alignments=False, localsgd_frequency=3, log_format='json', log_interval=100, lr=[5e-05], lr_scheduler='polynomial_decay', max_epoch=1, max_source_positions=1024, max_target_positions=1024, max_tokens=None, max_tokens_valid=None, max_update=0, maximize_best_checkpoint_metric=True, memory_efficient_bf16=False, memory_efficient_fp16=False, min_loss_scale=0.0001, min_lr=-1.0, model_parallel_size=1, move_dstore_to_mem=True, no_cross_attention=False, no_epoch_checkpoints=True, no_last_checkpoints=False, no_progress_bar=False, no_save=False, no_save_optimizer_state=False, no_scale_embedding=False, no_seed_provided=False, no_token_positional_embeddings=False, nprocs_per_node=1, num_batch_buckets=0, num_shards=1, num_workers=1, only_train_final_output=False, optimizer='adam', optimizer_overrides='{}', partially_finetune=True, patience=5, pipeline_balance=None, pipeline_checkpoint='never', pipeline_chunks=0, pipeline_decoder_balance=None, pipeline_decoder_devices=None, pipeline_devices=None, pipeline_encoder_balance=None, pipeline_encoder_devices=None, pipeline_model_parallel=False, pooler_activation_fn='tanh', pooler_dropout=0.0, power=1.0, prepend_bos=False, probe=32, profile=False, quant_noise_pq=0, quant_noise_pq_block_size=8, quant_noise_scalar=0, quantization_config_path=None, relu_dropout=0.0, report_accuracy=False, required_batch_size_multiple=8, required_seq_len_multiple=1, reset_dataloader=True, reset_lr_scheduler=True, reset_meters=True, reset_optimizer=True, restore_file='/home/cluster/jgu/scratch/ssr/cli/out/mix/full_base_python_en_XX/checkpoint_best.pt', save_dir='/home/cluster/jgu/scratch/ssr/cli/out/mix/full_ada_python_en_XX', save_interval=1, save_interval_updates=0, scoring='bleu', seed=42, sentence_avg=False, sentencepiece_model='/home/cluster/jgu/scratch/ssr/cli/sentencepiece/sentencepiece.bpe.model', shard_id=0, share_all_embeddings=True, share_decoder_input_output_embed=True, skip_invalid_size_inputs_valid_test=False, slowmo_algorithm='LocalSGD', slowmo_momentum=None, source_lang='python', stop_time_hours=0, target_lang='en_XX', task='translation_from_pretrained_bart', tensorboard_logdir=None, threshold_loss_scale=None, tokenizer=None, total_num_update=1000000, tpu=False, train_subset='train', truncate_source=False, update_freq=[1], upsample_primary=1, use_bmuf=False, use_gpu_to_search=True, use_knn_datastore=True, use_old_adam=False, user_dir='/home/cluster/jgu/scratch/ssr/cli', valid_subset='valid', validate_after_updates=0, validate_interval=1, validate_interval_updates=0, warmup_updates=1000, weight_decay=0.0, zero_sharding='none')
2022-08-29 00:33:06 | INFO | fairseq.tasks.translation | [python] dictionary: 50001 types
2022-08-29 00:33:06 | INFO | fairseq.tasks.translation | [en_XX] dictionary: 50001 types
2022-08-29 00:33:06 | INFO | fairseq.data.data_utils | loaded 18505 examples from: /home/cluster/jgu/scratch/ssr/cli/out/mix/python/data-bin/valid.python-en_XX.python
2022-08-29 00:33:06 | INFO | fairseq.data.data_utils | loaded 18505 examples from: /home/cluster/jgu/scratch/ssr/cli/out/mix/python/data-bin/valid.python-en_XX.en_XX
2022-08-29 00:33:06 | INFO | fairseq.tasks.translation | /home/cluster/jgu/scratch/ssr/cli/out/mix/python/data-bin valid python-en_XX 18505 examples
put index from cpu to gpu
Reading datastore took 1.637216567993164 s
the datastore is /home/cluster/jgu/scratch/ssr/cli/out/mix/python/full_datastore, size is 601026, and dim is 768 
Loading to memory...
Loading to memory took 2.9091529846191406 s
2022-08-29 00:33:14 | INFO | fairseq_cli.train | BARTModel(
  (encoder): TransformerEncoder(
    (dropout_module): FairseqDropout()
    (embed_tokens): Embedding(50005, 768, padding_idx=1)
    (embed_positions): LearnedPositionalEmbedding(1026, 768, padding_idx=1)
    (layernorm_embedding): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
    (layers): ModuleList(
      (0): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=768, out_features=3072, bias=True)
        (fc2): Linear(in_features=3072, out_features=768, bias=True)
        (final_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      )
      (1): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=768, out_features=3072, bias=True)
        (fc2): Linear(in_features=3072, out_features=768, bias=True)
        (final_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      )
      (2): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=768, out_features=3072, bias=True)
        (fc2): Linear(in_features=3072, out_features=768, bias=True)
        (final_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      )
      (3): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=768, out_features=3072, bias=True)
        (fc2): Linear(in_features=3072, out_features=768, bias=True)
        (final_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      )
      (4): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=768, out_features=3072, bias=True)
        (fc2): Linear(in_features=3072, out_features=768, bias=True)
        (final_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      )
      (5): TransformerEncoderLayer(
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (self_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (dropout_module): FairseqDropout()
        (activation_dropout_module): FairseqDropout()
        (fc1): Linear(in_features=768, out_features=3072, bias=True)
        (fc2): Linear(in_features=3072, out_features=768, bias=True)
        (final_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      )
    )
  )
  (decoder): TransformerDecoder(
    (dropout_module): FairseqDropout()
    (embed_tokens): Embedding(50005, 768, padding_idx=1)
    (embed_positions): LearnedPositionalEmbedding(1026, 768, padding_idx=1)
    (layernorm_embedding): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
    (layers): ModuleList(
      (0): TransformerDecoderLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (encoder_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (encoder_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=768, out_features=3072, bias=True)
        (fc2): Linear(in_features=3072, out_features=768, bias=True)
        (final_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      )
      (1): TransformerDecoderLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (encoder_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (encoder_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=768, out_features=3072, bias=True)
        (fc2): Linear(in_features=3072, out_features=768, bias=True)
        (final_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      )
      (2): TransformerDecoderLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (encoder_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (encoder_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=768, out_features=3072, bias=True)
        (fc2): Linear(in_features=3072, out_features=768, bias=True)
        (final_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      )
      (3): TransformerDecoderLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (encoder_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (encoder_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=768, out_features=3072, bias=True)
        (fc2): Linear(in_features=3072, out_features=768, bias=True)
        (final_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      )
      (4): TransformerDecoderLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (encoder_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (encoder_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=768, out_features=3072, bias=True)
        (fc2): Linear(in_features=3072, out_features=768, bias=True)
        (final_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      )
      (5): TransformerDecoderLayer(
        (dropout_module): FairseqDropout()
        (self_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (activation_dropout_module): FairseqDropout()
        (self_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (encoder_attn): MultiheadAttention(
          (dropout_module): FairseqDropout()
          (k_proj): Linear(in_features=768, out_features=768, bias=True)
          (v_proj): Linear(in_features=768, out_features=768, bias=True)
          (q_proj): Linear(in_features=768, out_features=768, bias=True)
          (out_proj): Linear(in_features=768, out_features=768, bias=True)
        )
        (encoder_attn_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        (fc1): Linear(in_features=768, out_features=3072, bias=True)
        (fc2): Linear(in_features=3072, out_features=768, bias=True)
        (final_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      )
    )
    (adaptive_block): AdaptiveBlock(
      (fc_unit): Linear(in_features=768, out_features=768, bias=False)
      (fc_unit2): Linear(in_features=768, out_features=768, bias=False)
      (fc_zero): Linear(in_features=768, out_features=768, bias=False)
      (fc_zero2): Linear(in_features=768, out_features=768, bias=False)
    )
    (output_projection): Linear(in_features=768, out_features=50005, bias=False)
  )
  (classification_heads): ModuleDict()
)
2022-08-29 00:33:14 | INFO | fairseq_cli.train | task: translation_from_pretrained_bart (TranslationFromPretrainedBARTTask)
2022-08-29 00:33:14 | INFO | fairseq_cli.train | model: mbart_base (BARTModel)
2022-08-29 00:33:14 | INFO | fairseq_cli.train | criterion: label_smoothed_cross_entropy (LabelSmoothedCrossEntropyCriterion)
2022-08-29 00:33:14 | INFO | fairseq_cli.train | num. model params: 141580032 (num. trained: 2359296)
2022-08-29 00:33:14 | INFO | fairseq.trainer | detected shared parameter: encoder.embed_tokens.weight <- decoder.embed_tokens.weight
2022-08-29 00:33:14 | INFO | fairseq.trainer | detected shared parameter: encoder.embed_tokens.weight <- decoder.output_projection.weight
2022-08-29 00:33:14 | INFO | fairseq.trainer | detected shared parameter: decoder.adaptive_block.fc_unit.bias <- decoder.adaptive_block.fc_unit2.bias
2022-08-29 00:33:14 | INFO | fairseq.trainer | detected shared parameter: decoder.adaptive_block.fc_unit.bias <- decoder.adaptive_block.fc_zero.bias
2022-08-29 00:33:14 | INFO | fairseq.trainer | detected shared parameter: decoder.adaptive_block.fc_unit.bias <- decoder.adaptive_block.fc_zero2.bias
2022-08-29 00:33:14 | INFO | fairseq.trainer | detected shared parameter: decoder.adaptive_block.fc_unit.bias <- decoder.output_projection.bias
2022-08-29 00:33:14 | INFO | fairseq.utils | ***********************CUDA enviroments for all 1 workers***********************
2022-08-29 00:33:14 | INFO | fairseq.utils | rank   0: capabilities =  7.0  ; total memory = 31.749 GB ; name = Tesla V100-SXM2-32GB                    
2022-08-29 00:33:14 | INFO | fairseq.utils | ***********************CUDA enviroments for all 1 workers***********************
2022-08-29 00:33:14 | INFO | fairseq_cli.train | training on 1 devices (GPUs/TPUs)
2022-08-29 00:33:14 | INFO | fairseq_cli.train | max tokens per GPU = None and max sentences per GPU = 32
-----------------knn load part of model-----------------
2022-08-29 00:33:25 | INFO | fairseq.trainer | loaded checkpoint /home/cluster/jgu/scratch/ssr/cli/out/mix/full_base_python_en_XX/checkpoint_best.pt (epoch 26 @ 0 updates)
2022-08-29 00:33:25 | INFO | fairseq.trainer | NOTE: your device may support faster training with --fp16
2022-08-29 00:33:25 | INFO | fairseq.trainer | loading train data for epoch 1
2022-08-29 00:33:25 | INFO | fairseq.data.data_utils | loaded 55538 examples from: /home/cluster/jgu/scratch/ssr/cli/out/mix/python/data-bin/train.python-en_XX.python
2022-08-29 00:33:25 | INFO | fairseq.data.data_utils | loaded 55538 examples from: /home/cluster/jgu/scratch/ssr/cli/out/mix/python/data-bin/train.python-en_XX.en_XX
2022-08-29 00:33:25 | INFO | fairseq.tasks.translation | /home/cluster/jgu/scratch/ssr/cli/out/mix/python/data-bin train python-en_XX 55538 examples
2022-08-29 00:33:25 | INFO | fairseq.trainer | begin training epoch 1
2022-08-29 00:33:43 | INFO | train_inner | {"epoch": 1, "update": 0.058, "loss": "2.602", "nll_loss": "0.566", "ppl": "1.48", "wps": "2307.2", "ups": "5.62", "wpb": "411.6", "bsz": "31.9", "num_updates": "100", "lr": "5e-06", "gnorm": "0.402", "train_wall": "18", "wall": "29"}
2022-08-29 00:33:59 | INFO | train_inner | {"epoch": 1, "update": 0.115, "loss": "2.564", "nll_loss": "0.563", "ppl": "1.48", "wps": "2565", "ups": "6.31", "wpb": "406.5", "bsz": "32", "num_updates": "200", "lr": "1e-05", "gnorm": "0.36", "train_wall": "16", "wall": "45"}
2022-08-29 00:34:17 | INFO | train_inner | {"epoch": 1, "update": 0.173, "loss": "2.551", "nll_loss": "0.565", "ppl": "1.48", "wps": "2328.9", "ups": "5.59", "wpb": "416.3", "bsz": "32", "num_updates": "300", "lr": "1.5e-05", "gnorm": "0.355", "train_wall": "18", "wall": "63"}
2022-08-29 00:34:34 | INFO | train_inner | {"epoch": 1, "update": 0.23, "loss": "2.547", "nll_loss": "0.572", "ppl": "1.49", "wps": "2407.2", "ups": "6.05", "wpb": "398.1", "bsz": "32", "num_updates": "400", "lr": "2e-05", "gnorm": "0.365", "train_wall": "16", "wall": "80"}
2022-08-29 00:34:50 | INFO | train_inner | {"epoch": 1, "update": 0.288, "loss": "2.541", "nll_loss": "0.57", "ppl": "1.48", "wps": "2515.7", "ups": "6.22", "wpb": "404.7", "bsz": "32", "num_updates": "500", "lr": "2.5e-05", "gnorm": "0.369", "train_wall": "16", "wall": "96"}
2022-08-29 00:35:08 | INFO | train_inner | {"epoch": 1, "update": 0.346, "loss": "2.543", "nll_loss": "0.579", "ppl": "1.49", "wps": "2220.1", "ups": "5.51", "wpb": "402.7", "bsz": "32", "num_updates": "600", "lr": "3e-05", "gnorm": "0.366", "train_wall": "18", "wall": "114"}
2022-08-29 00:35:28 | INFO | train_inner | {"epoch": 1, "update": 0.403, "loss": "2.552", "nll_loss": "0.585", "ppl": "1.5", "wps": "2131.8", "ups": "5.05", "wpb": "422.3", "bsz": "32", "num_updates": "700", "lr": "3.5e-05", "gnorm": "0.357", "train_wall": "20", "wall": "134"}
2022-08-29 00:35:48 | INFO | train_inner | {"epoch": 1, "update": 0.461, "loss": "2.554", "nll_loss": "0.594", "ppl": "1.51", "wps": "2080.4", "ups": "4.97", "wpb": "418.6", "bsz": "32", "num_updates": "800", "lr": "4e-05", "gnorm": "0.358", "train_wall": "20", "wall": "154"}
2022-08-29 00:36:05 | INFO | train_inner | {"epoch": 1, "update": 0.518, "loss": "2.545", "nll_loss": "0.588", "ppl": "1.5", "wps": "2270.6", "ups": "5.8", "wpb": "391.5", "bsz": "32", "num_updates": "900", "lr": "4.5e-05", "gnorm": "0.354", "train_wall": "17", "wall": "171"}
2022-08-29 00:36:20 | INFO | train_inner | {"epoch": 1, "update": 0.576, "loss": "2.508", "nll_loss": "0.549", "ppl": "1.46", "wps": "2682.1", "ups": "6.84", "wpb": "391.9", "bsz": "32", "num_updates": "1000", "lr": "5e-05", "gnorm": "0.347", "train_wall": "15", "wall": "186"}
2022-08-29 00:36:37 | INFO | train_inner | {"epoch": 1, "update": 0.634, "loss": "2.543", "nll_loss": "0.586", "ppl": "1.5", "wps": "2391.4", "ups": "5.72", "wpb": "418.2", "bsz": "32", "num_updates": "1100", "lr": "4.9995e-05", "gnorm": "0.355", "train_wall": "17", "wall": "203"}
2022-08-29 00:36:56 | INFO | train_inner | {"epoch": 1, "update": 0.691, "loss": "2.545", "nll_loss": "0.587", "ppl": "1.5", "wps": "2266.5", "ups": "5.34", "wpb": "424.1", "bsz": "32", "num_updates": "1200", "lr": "4.999e-05", "gnorm": "0.344", "train_wall": "19", "wall": "222"}
2022-08-29 00:37:13 | INFO | train_inner | {"epoch": 1, "update": 0.749, "loss": "2.527", "nll_loss": "0.571", "ppl": "1.49", "wps": "2404.3", "ups": "5.79", "wpb": "414.9", "bsz": "32", "num_updates": "1300", "lr": "4.9985e-05", "gnorm": "0.345", "train_wall": "17", "wall": "239"}
2022-08-29 00:37:29 | INFO | train_inner | {"epoch": 1, "update": 0.806, "loss": "2.524", "nll_loss": "0.567", "ppl": "1.48", "wps": "2554.1", "ups": "6.06", "wpb": "421.4", "bsz": "32", "num_updates": "1400", "lr": "4.998e-05", "gnorm": "0.339", "train_wall": "16", "wall": "256"}
2022-08-29 00:37:50 | INFO | train_inner | {"epoch": 1, "update": 0.864, "loss": "2.573", "nll_loss": "0.62", "ppl": "1.54", "wps": "2043.2", "ups": "4.81", "wpb": "424.6", "bsz": "32", "num_updates": "1500", "lr": "4.9975e-05", "gnorm": "0.347", "train_wall": "21", "wall": "276"}
2022-08-29 00:38:06 | INFO | train_inner | {"epoch": 1, "update": 0.922, "loss": "2.498", "nll_loss": "0.544", "ppl": "1.46", "wps": "2465.3", "ups": "6.4", "wpb": "385.5", "bsz": "32", "num_updates": "1600", "lr": "4.997e-05", "gnorm": "0.329", "train_wall": "16", "wall": "292"}
2022-08-29 00:38:24 | INFO | train_inner | {"epoch": 1, "update": 0.979, "loss": "2.522", "nll_loss": "0.567", "ppl": "1.48", "wps": "2260.8", "ups": "5.42", "wpb": "417.4", "bsz": "32", "num_updates": "1700", "lr": "4.9965e-05", "gnorm": "0.344", "train_wall": "18", "wall": "310"}
2022-08-29 00:38:30 | INFO | fairseq_cli.train | begin validation on "valid" subset
/net/cephfs/scratch/jgu/ssr/fairseq/utils.py:342: UserWarning: amp_C fused kernels unavailable, disabling multi_tensor_l2norm; you may get better performance by installing NVIDIA's apex library
  "amp_C fused kernels unavailable, disabling multi_tensor_l2norm; "
2022-08-29 00:47:12 | INFO | valid | {"epoch": 1, "valid_loss": "6.005", "valid_nll_loss": "4.503", "valid_ppl": "22.67", "valid_bleu": "21.33", "valid_wps": "457.1", "valid_wpb": "411.1", "valid_bsz": "32", "valid_num_updates": "1736"}
2022-08-29 00:47:12 | INFO | fairseq_cli.train | begin save checkpoint
2022-08-29 00:47:14 | INFO | fairseq.checkpoint_utils | saved checkpoint /home/cluster/jgu/scratch/ssr/cli/out/mix/full_ada_python_en_XX/checkpoint_best.pt (epoch 1 @ 1736 updates, score 21.33) (writing took 2.281664341688156 seconds)
2022-08-29 00:47:14 | INFO | fairseq_cli.train | end of epoch 1 (average epoch stats below)
2022-08-29 00:47:14 | INFO | train | {"epoch": 1, "train_loss": "2.543", "train_nll_loss": "0.575", "train_ppl": "1.49", "train_wps": "859", "train_ups": "2.09", "train_wpb": "410.2", "train_bsz": "32", "train_num_updates": "1736", "train_lr": "4.99632e-05", "train_gnorm": "0.355", "train_train_wall": "303", "train_wall": "840"}
2022-08-29 00:47:14 | INFO | fairseq_cli.train | done training in 829.2 seconds
/net/cephfs/scratch/jgu/ssr/fairseq/search.py:140: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  beams_buf = indices_buf // vocab_size
/net/cephfs/scratch/jgu/ssr/fairseq/sequence_generator.py:651: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  unfin_idx = idx // beam_size
4.model_adaption.sh: line 110: daption: command not found
@ Completed
@ Stage 5
/net/cephfs/scratch/jgu/ssr/fairseq/search.py:140: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  beams_buf = indices_buf // vocab_size
/net/cephfs/scratch/jgu/ssr/fairseq/sequence_generator.py:651: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  unfin_idx = idx // beam_size
WARNING (theano.tensor.blas): We did not find a dynamic library in the library_dir of the library we use for blas. If you use ATLAS, make sure to compile it with dynamics library.
c_bleu = 29.57 | s_bleu = 36.82 | meteor = 23.96 | rouge = 46.6
rouge_coco = 52.28
@ Completed
